apply plugin: 'java'
//apply plugin: 'maven-publish'

//apply from: '../college/build-fragment.gradle' 

group = 'net.opuscollege'
version = 4.3

sourceCompatibility = 1.8

ext {
    // NB: jasperreports-fonts only available in version 6.0.0 while jasperReports is already 6.2.0
    jacksonVersion = '2.9.9'
    jasperReportsVersion = '6.3.1'
    jasperReportsFontsVersion = '6.+'
    log4jVersion = '2.5'
    mybatisVersion = '3.5.4'
    mybatisSpringVersion = '1.3.3'
	slf4jVersion = '1.7.+'
    springVersion = '4.3.26.RELEASE'
    springSecurityVersion = '4.2.15.RELEASE'
}

repositories {
    jcenter()

    // Jasper repositories with bug fixes to their third party dependencies
    maven { url "http://jasperreports.sourceforge.net/maven2" }
    maven { url "http://jaspersoft.artifactoryonline.com/jaspersoft/third-party-ce-artifacts/" }
}

dependencies {

    // NB: To get source code, select the library in question in *college* module /src/main/... and use JavaSourceAttacher

    //testCompile group: 'junit', name: 'junit', version: '4.+'

    // Batik is used for SVG rendering by JasperReports - version upgraded to 1.8 even though it was/is unstable, see: http://stackoverflow.com/a/30245104/606662
    //    for 1.8 it was necessary to add xmlgraphics-commons
    compile 'org.apache.xmlgraphics:batik-bridge:1.8'
    compile 'org.apache.xmlgraphics:batik-svggen:1.8'

    // xmlgraphics-commons used by batik 1.8
    // https://mvnrepository.com/artifact/org.apache.xmlgraphics/xmlgraphics-commons
    compile group: 'org.apache.xmlgraphics', name: 'xmlgraphics-commons', version: '2.1'

    // commons-io used by xmlgraphics-commons, which by default points to a very old version
    // https://mvnrepository.com/artifact/commons-io/commons-io
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    
    // https://mvnrepository.com/artifact/org.apache.commons/commons-dbcp2
    compile group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.1.1'

    // xml-apis: Note that version 1.4.01 is newer than 2.0.2 - see: http://stackoverflow.com/a/29393588/606662
    compile "xml-apis:xml-apis:1.4.01"

    // Bouncy castle are security libraries
    compile 'org.bouncycastle:bcmail-jdk14:1.54'

    // Commons
    compile 'commons-beanutils:commons-beanutils:1.9.2'
    compile 'commons-collections:commons-collections:3.2.2'
    compile 'org.apache.commons:commons-lang3:3.4'

    // Jackson
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    // die JDK8 Packages waeren vermutlich nicht mal noetig fuer Opus
	compile group: 'com.fasterxml.jackson.datatype', name:'jackson-datatype-jsr310', version: jacksonVersion
	compile group: 'com.fasterxml.jackson.datatype', name:'jackson-datatype-jdk8', version: jacksonVersion
	compile group: 'com.fasterxml.jackson.module', name:'jackson-module-parameter-names', version: jacksonVersion


    // Jasper reports
    compile "net.sf.jasperreports:jasperreports:$jasperReportsVersion"
    compile "net.sf.jasperreports:jasperreports-fonts:$jasperReportsFontsVersion"
	compile "org.apache.poi:poi:3.14"                 // Word
	compile "net.sourceforge.jexcelapi:jxl:2.6.12"    // Excel
	compile ("net.sf.barcode4j:barcode4j:2.1") {
        // Barcode4j has declared dependencies on Avalon Framework and Ant libraries, which are apparently not needed
        exclude module: 'avalon-framework-impl'
        exclude group: 'org.apache.ant'
    }
    
    // Jawr
    compile "net.jawr.extensions:jawr-spring-extension:3.8"
    
    // Jstl
    compile "javax.servlet:jstl:1.2"

    // Logging
    compile "org.apache.logging.log4j:log4j-slf4j-impl:2.5"
    compile "org.apache.logging.log4j:log4j-web:2.5"
    compile "org.slf4j:slf4j-api:$slf4jVersion"
//	compile "org.slf4j:slf4j-log4j12:$slf4jVersion"
//	compile "org.slf4j:jcl-over-slf4j:$slf4jVersion"

    //Mail
    compile "javax.mail:javax.mail-api:1.5.5"

    // MyBatis
	compile "org.mybatis:mybatis:$mybatisVersion"
    compile "org.mybatis:mybatis-spring:$mybatisSpringVersion"
    compile "org.javassist:javassist:3.20.0-GA"      // Javassist: used by MyBatis to enable lazy loading

    // Spring
    compile group: 'org.springframework', name: 'spring-aop', version: springVersion
    compile group: 'org.springframework', name: 'spring-aspects', version: springVersion
    compile group: 'org.springframework', name: 'spring-context-support', version: springVersion
    compile group: 'org.springframework', name: 'spring-orm', version: springVersion
    compile group: 'org.springframework', name: 'spring-test', version: springVersion
    compile group: 'org.springframework', name: 'spring-tx', version: springVersion
    compile group: 'org.springframework', name: 'spring-webmvc', version: springVersion

    // Spring Security
	compile "org.springframework.security:spring-security-web:$springSecurityVersion"
	compile "org.springframework.security:spring-security-taglibs:$springSecurityVersion"
	compile "org.springframework.security:spring-security-config:$springSecurityVersion"
    compile "org.springframework.security:spring-security-test:$springSecurityVersion"
	
}

configurations {

	all*.exclude group: 'commons-logging'

	// 'bouncycastle' has moved to 'org.bouncycastle', but old still referenced by some lib and other lib already references the new group; therefore ban the old group
    all*.exclude group: 'bouncycastle'

    // there are two almost identical stax-api libraries: stax-api-1.0.1.jar and stax-api-1.0-2.jar, the latter has a weird version number (1.0-2) and we exclude this one
    all*.exclude group: 'javax.xml.stream', module: 'stax-api'

    // exclude Log4j 1.x because we use Log4j 2.x (note that log4j2 has a different group than the 'old' log4j)
    all*.exclude group: "org.slf4j", module: "slf4j-log4j12"
    all*.exclude group: "log4j", module: "log4j"
}

configurations.all {
  resolutionStrategy.force "xml-apis:xml-apis:1.4.01"
}

task hello {
    doLast {
        println 'Hello world!'
    }
}

// copy all dependent jars from the gradle cache into the WEB-INF/lib folder
task copylibs(type: Copy) {
    into "src/main/webapp/WEB-INF/lib"
    from configurations.runtime
}



// When upgrading gradle, set gradleVersion and run 'gradlew wrapper' from command line
// Then, gradle-wrapper.properties will be updated accordingly
task wrapper(type: Wrapper) {
    gradleVersion = '2.11'
}

