#-------------------------------------------------------------------------------
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
# 
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
# 
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
# 
# The Original Code is Opus-College unza module code.
# 
# The Initial Developer of the Original Code is
# Center for Information Services, Radboud University Nijmegen.
# Portions created by the Initial Developer are Copyright (C) 2008
# the Initial Developer. All Rights Reserved.
# 
# Contributor(s):
#   For Java files, see Javadoc @author tags.
# 
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
# 
# ***** END LICENSE BLOCK *****
#-------------------------------------------------------------------------------
# Log for Java configuration - specific for UNZA's database conversion
# Output is written to a file called 'unza.log'
# The possible values here are debug, info, warn, error, fatal
# 
# Default log values for every application. You can overrule them with specific configuration
# in your web.xml, but this is not necessary 

#-----------------------------------
#  Root logger
#-----------------------------------

#
# CHOOSE INFO / DEBUG:
#
# Parameters: <log level (info/debug/..)>, <appender 1>, <appender 2>, etc. 
#
#log4j.rootLogger=DEBUG, R, C
log4j.rootLogger=INFO, R, C

#
# CONSOLE APPENDER - Don't change this
#
log4j.appender.C=org.apache.log4j.ConsoleAppender
log4j.appender.C.layout=org.apache.log4j.PatternLayout
# This defines the way comments are written to the log file, for e.g. %d tells the logger to write the date
# for a full list see the log4j manual. %p is the priority (debug, info etc as defined above)
#log4j.appender.C.layout.ConversionPattern=%d{dd MMM yyyy HH:mm:ss} -- %p -- %m%n
# Alef: Print the date in ISO 8601 format
#log4j.appender.C.layout.conversionPattern=%d [%t] %-5p %c - %m%n
log4j.appender.C.layout.conversionPattern=%p %d %t %c - %m%n

#
# ROLLING FILE APPENDER - Don't change this
#
log4j.appender.R=org.apache.log4j.RollingFileAppender 
log4j.appender.R.File=unza.log 
log4j.appender.R.Append=false
log4j.appender.R.MaxBackupIndex=0
# The maximum size of the log file, good idea to keep the size small.
#log4j.appender.R.MaxFileSize=10MB
log4j.appender.R.layout=org.apache.log4j.PatternLayout
# Alef: Print the date in ISO 8601 format
#log4j.appender.R.layout.ConversionPattern=%d [%t] %-5p %c - %m%n
log4j.appender.R.layout.ConversionPattern=%p %d %t %c - %m%n

#
# OPTIONALLY: Log other important things too
#
#log4j.logger.org.uci.opus=DEBUG
#log4j.org.springframework=DEBUG
#log4j.org.apache.catalina=DEBUG
#log4j.logger.org.apache.catalina.core=DEBUG
#log4j.logger.org.apache.catalina.session=DEBUG
#log4j.logger.com.ibatis=DEBUG
#log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG

