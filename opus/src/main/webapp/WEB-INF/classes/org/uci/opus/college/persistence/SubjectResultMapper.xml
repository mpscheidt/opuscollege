<?xml version="1.0" encoding="UTF-8"?>
<!--
  ***** BEGIN LICENSE BLOCK *****
  Version: MPL 1.1/GPL 2.0/LGPL 2.1
  
  The contents of this file are subject to the Mozilla Public License Version
  1.1 (the "License"); you may not use this file except in compliance with
  the License. You may obtain a copy of the License at
  http://www.mozilla.org/MPL/
  
  Software distributed under the License is distributed on an "AS IS" basis,
  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
  for the specific language governing rights and limitations under the
  License.
  
  The Original Code is Opus-College college module code.
  
  The Initial Developer of the Original Code is
  Center for Information Services, Radboud University Nijmegen.
  Portions created by the Initial Developer are Copyright (C) 2008
  the Initial Developer. All Rights Reserved.
  
  Contributor(s):
    For Java files, see Javadoc @author tags.
  
  Alternatively, the contents of this file may be used under the terms of
  either the GNU General Public License Version 2 or later (the "GPL"), or
  the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
  in which case the provisions of the GPL or the LGPL are applicable instead
  of those above. If you wish to allow use of your version of this file only
  under the terms of either the GPL or the LGPL, and not to allow others to
  use your version of this file under the terms of the MPL, indicate your
  decision by deleting the provisions above and replace them with the notice
  and other provisions required by the GPL or the LGPL. If you do not delete
  the provisions above, a recipient may use your version of this file under
  the terms of any one of the MPL, the GPL or the LGPL.
  
  ***** END LICENSE BLOCK *****
-->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.uci.opus.college.persistence.SubjectResultMapper"> 

    <!-- basic result map without joined lists -->
    <resultMap id="BasicSubjectResultResultMap" type="SubjectResult">
        <id property="id" column="id"/>
        <result property="subjectId" column="subjectId"/>
        <result property="studyPlanDetailId" column="studyPlanDetailId"/>
        <result property="subjectResultDate" column="subjectResultDate" javaType="java.util.Date"/>
        <result property="mark" column="mark"/>
        <result property="markDecimal" column="markDecimal"/>
        <result property="endGradeComment" column="endGradeComment"/>
        <result property="staffMemberId" column="staffMemberId"/>
        <result property="active" column="active"/>
        <result property="passed" column="passed"/>
    </resultMap>

    <resultMap id="SubjectResultResultMap" type="SubjectResult" extends="BasicSubjectResultResultMap">
        <association property="endGradeTypeCode" select="org.uci.opus.college.persistence.StudyMapper.findGradeTypeCodeForStudyPlanDetail" column="studyPlanDetailId"/> 
        <association property="subject" select="org.uci.opus.college.persistence.SubjectMapper.findSubject" column="subjectId"/>
    </resultMap>

    <!-- automapping="false" because otherwise non-existing subject result records (which is left-outer joined) would be mapped to SubjectResult objects with id of the person;
         this happens because of "partial" automapping that takes the first id column in the SQL and maps it to the id property of the SubjectResult in case SQL return null in subjectResult_subjectId.
         See: http://www.mybatis.org/mybatis-3/sqlmap-xml.html#Auto-mapping, which provides a similar example 
         The BasicFQSubjectResultResultMap is referenced indirectly from the huge StudentResultMap_WithCTUAndSubjectResults, in which case automapping set to true would create
         too many SubjectResult objects with id values wrongly set to the person.id, because that is loaded as "id" column name and would be "automapped" to SubjectResult.id.
         -->
    <resultMap id="BasicFQSubjectResultResultMap" type="SubjectResult" autoMapping="false">
        <id property="id" column="subjectResult_id"/>
        <result property="subjectId" column="subjectResult_subjectId"/>
        <result property="studyPlanDetailId" column="subjectResult_studyPlanDetailId"/>
        <result property="subjectResultDate" column="subjectResult_subjectResultDate" javaType="java.util.Date"/>
        <result property="mark" column="subjectResult_mark"/>
        <result property="endGradeComment" column="subjectResult_endGradeComment"/>
        <result property="staffMemberId" column="subjectResult_staffMemberId"/>
        <result property="active" column="subjectResult_active"/>
        <result property="passed" column="subjectResult_passed"/>
        <result property="subjectResultCommentId" column="subjectResult_subjectResultCommentId"/>
    </resultMap>
    
    <resultMap id="SubjectResultHistoryResultMap" type="SubjectResultHistory" autoMapping="false">
    	<result property="operation" column="operation"/>
    	<result property="writewho" column="writewho"/>
    	<result property="writewhen" column="writewhen" javaType="java.util.Date"/>
    	<result property="mark" column="mark"/>
    	<result property="passed" column="passed"/>
    	<result property="endgradecomment" column="endgradecomment"/>
    	<result property="surnameFull" column="surnameFull"/>
    	<result property="firstnamesFull" column="firstnamesFull"/>
    	<result property="subjectResultCommentId" column="subjectresultcommentid"/>
    </resultMap>


    <select id="findSubjectResultsForStudyPlanResult" parameterType="int" resultMap="SubjectResultResultMap">
        select opuscollege.subjectResult.*
        from   opuscollege.subjectResult
        INNER JOIN opuscollege.studyPlanDetail ON subjectResult.studyPlanDetailId = studyPlanDetail.id
        INNER JOIN opuscollege.studyPlan ON studyPlanDetail.studyPlanId = studyPlan.id
        INNER JOIN opuscollege.studyPlanResult ON studyPlanResult.studyPlanId = studyPlan.id
        where  studyPlanResult.id = #{value}
        ORDER BY opuscollege.subjectResult.subjectId
    </select>


    <!-- find all SubjectResults for one StudyPlan -->
    <select id="findSubjectResultsForStudyPlan" parameterType="int" resultMap="SubjectResultResultMap"> 
        select opuscollege.subjectResult.* 
        from opuscollege.subjectResult
        INNER JOIN opuscollege.studyPlanDetail ON subjectResult.studyPlanDetailId = studyPlanDetail.id
        WHERE studyPlanDetail.studyPlanId = #{value}
        AND (
            subjectResult.subjectId IN (
                SELECT subjectSubjectBlock.subjectId 
                FROM opuscollege.subjectSubjectBlock
                INNER JOIN opuscollege.studyPlanDetail ON studyPlanDetail.subjectBlockId = subjectSubjectBlock.subjectBlockId
                WHERE studyPlanDetail.studyPlanId = #{value}
                )
            OR subjectResult.subjectId IN (
                SELECT subjectId 
                FROM opuscollege.studyPlanDetail
                WHERE studyPlanDetail.studyPlanId = #{value}
                )
            )
        ORDER BY subjectResult.subjectId     
    </select>

    <!-- find all SubjectResults for one StudyPlan -->
    <select id="findSubjectResultsForStudyPlanByParams" parameterType="map" resultMap="SubjectResultResultMap"> 
        select opuscollege.subjectResult.* 
        from opuscollege.subjectResult
        INNER JOIN opuscollege.studyPlanDetail ON subjectResult.studyPlanDetailId = studyPlanDetail.id
        INNER JOIN opuscollege.studyPlanCardinalTimeUnit ON studyPlanDetail.studyPlanCardinalTimeUnitId = studyPlanCardinalTimeUnit.id
        INNER JOIN opuscollege.studyGradeType ON studyPlanCardinalTimeUnit.studyGradeTypeId = studyGradeType.id
        WHERE studyPlanDetail.studyPlanId = #{studyPlanId}
        AND studyPlanCardinalTimeUnit.cardinalTimeUnitNumber = #{cardinalTimeUnitNumber}
        <if test='currentAcademicYearId != null and currentAcademicYearId != "0"'>
            AND studyGradeType.currentAcademicYearId = #{currentAcademicYearId}
        </if>
        AND subjectResult.subjectId IN (
                SELECT subjectResult.subjectId 
                FROM opuscollege.subjectSubjectBlock
                INNER JOIN opuscollege.studyPlanDetail ON studyPlanDetail.subjectBlockId = subjectSubjectBlock.subjectBlockId
                WHERE studyPlanDetail.subjectBlockId IN (
                        select subjectBlock.id 
                        FROM opuscollege.subjectBlock
                        <if test='currentAcademicYearId != null and currentAcademicYearId != "0"'>
                            WHERE subjectBlock.currentAcademicYearId = #{currentAcademicYearId}
                        </if>
                )
        )
        OR subjectResult.subjectId IN (
                SELECT subjectId 
                FROM opuscollege.studyPlanDetail
                WHERE studyPlanDetail.subjectId IN (
                    select subject.id 
                    FROM opuscollege.subject
                        <if test='currentAcademicYearId != null and currentAcademicYearId != "0"'>
                            WHERE subject.currentAcademicYearId = #{currentAcademicYearId}
                        </if>
                )
        )
        ORDER BY subjectResult.subjectId     
    </select>


    <!-- find all active SubjectResults for one StudyPlan -->
    <select id="findActiveSubjectResultsForStudyPlan" parameterType="int" resultMap="SubjectResultResultMap"> 
        select opuscollege.subjectResult.* 
        from opuscollege.subjectResult
        INNER JOIN opuscollege.studyPlanDetail ON subjectResult.studyPlanDetailId = studyPlanDetail.id
        INNER JOIN opuscollege.studyPlanCardinalTimeUnit ON studyPlanDetail.studyPlanCardinalTimeUnitId = studyPlanCardinalTimeUnit.id
        WHERE studyPlanDetail.studyPlanId = #{value}
        AND   subjectResult.active = 'Y'
        AND (
             subjectResult.subjectId IN (
                SELECT subjectId 
                FROM opuscollege.studyPlanDetail
                WHERE studyPlanDetail.studyPlanId = #{value}
                )
            )
        ORDER BY subjectResult.subjectId     
    </select>

    <!-- find all active SubjectResults for one CardinalTimeUnit within a StudyPlan -->
    <select id="findActiveSubjectResultsForCardinalTimeUnit" parameterType="map" resultMap="SubjectResultResultMap"> 
        select  opuscollege.subjectResult.* 
        from    opuscollege.subjectResult
        INNER JOIN opuscollege.studyPlanDetail ON subjectResult.studyPlanDetailId = studyPlanDetail.id
        INNER JOIN opuscollege.studyPlanCardinalTimeUnit ON studyPlanDetail.studyPlanCardinalTimeUnitId = studyPlanCardinalTimeUnit.id
        INNER JOIN opuscollege.studyGradeType ON studyPlanCardinalTimeUnit.studyGradeTypeId = studyGradeType.id
        INNER JOIN opuscollege.studyPlan ON studyPlanCardinalTimeUnit.studyPlanId = studyPlan.id
        WHERE 1=1
        <if test='studyPlanId != null and studyPlanId != "0"'>
            AND     studyPlan.id = #{studyPlanId}
        </if>
        <if test='studyPlanCardinalTimeUnitId != null and studyPlanCardinalTimeUnitId != "0"'>
            AND     studyPlanCardinalTimeUnit.id = #{studyPlanCardinalTimeUnitId}
        </if>
        <if test='currentAcademicYearId != null and currentAcademicYearId != "0"'>
            AND     studyGradeType.currentAcademicYearId = #{currentAcademicYearId}
        </if>
        <if test='passed != null and passed != ""'>
            AND     subjectResult.passed = #{passed}
        </if>
        AND     subjectResult.active = 'Y'
        <if test='cardinalTimeUnitNumber != null and cardinalTimeUnitNumber != "0"'>
            AND studyPlancardinalTimeUnit.cardinalTimeUnitNumber = #{cardinalTimeUnitNumber}
<!--                 AND    ( -->
<!--                         subjectResult.subjectId IN ( -->
<!--                         SELECT     subjectSubjectBlock.subjectId  -->
<!--                         from opuscollege.subjectSubjectBlock -->
<!--                        INNER JOIN opuscollege.studyPlanDetail ON studyPlanDetail.subjectBlockId = subjectSubjectBlock.subjectBlockId -->
<!--                         INNER JOIN opuscollege.subjectResult ON subjectResult.studyPlanDetailId = studyPlanDetail.id -->
<!--                        INNER JOIN opuscollege.studyPlanCardinalTimeUnit ON studyPlanDetail.studyPlanCardinalTimeUnitId = studyPlanCardinalTimeUnit.id -->
<!--                        INNER JOIN opuscollege.studyPlan ON studyPlanCardinalTimeUnit.studyPlanId = studyPlan.id -->
<!--                        WHERE   studyPlancardinalTimeUnit.cardinalTimeUnitNumber = #{cardinalTimeUnitNumber} -->
<!--                         AND  -->
<!--                         ) -->
<!--                 OR         subjectResult.subjectId IN ( -->
<!--                         SELECT     subject.id from opuscollege.subject -->
<!--                        INNER JOIN opuscollege.studyPlanDetail ON subjectResult.studyPlanDetailId = studyPlanDetail.id -->
<!--                        INNER JOIN opuscollege.studyPlanCardinalTimeUnit ON studyPlanDetail.studyPlanCardinalTimeUnitId = studyPlanCardinalTimeUnit.id -->
<!--                        INNER JOIN opuscollege.studyPlan ON studyPlanCardinalTimeUnit.studyPlanId = studyPlan.id -->
<!--                        WHERE   studyPlancardinalTimeUnit.cardinalTimeUnitNumber = #{cardinalTimeUnitNumber} -->
<!--                         ) -->
<!--                         ) -->
        </if>
        ORDER BY subjectResult.subjectId     
    </select>

    <select id="findSubjectResultsForSubjectStudyGradeType" parameterType="map" resultMap="SubjectResultResultMap">
        SELECT      opuscollege.subjectResult.*
        FROM        opuscollege.subjectResult
        INNER JOIN  opuscollege.studyPlanDetail ON subjectResult.studyPlanDetailId = studyPlanDetail.id
        INNER JOIN  opuscollege.subjectstudygradetype on studyplandetail.subjectid = subjectstudygradetype.subjectid

        WHERE       subjectstudygradetype.studyGradeTypeId = #{studyGradeTypeId}
        AND         studyplandetail.subjectId = #{subjectId}
        ORDER BY    studyPlanDetailId, subjectResultDate 

    </select>

    <select id="findSubjectResultsForSubjectBlockStudyGradeType" parameterType="map" resultMap="SubjectResultResultMap">
        SELECT opuscollege.subjectResult.*
        FROM   opuscollege.subjectResult
        INNER JOIN opuscollege.studyPlanDetail ON subjectResult.studyPlanDetailId = studyPlanDetail.id
        INNER JOIN opuscollege.studyPlanCardinalTimeUnit ON studyPlanDetail.studyPlanCardinalTimeUnitId = studyPlanCardinalTimeUnit.id
        INNER JOIN opuscollege.studyPlan ON studyPlanCardinalTimeUnit.studyPlanId = studyPlan.id
        WHERE   studyPlanCardinalTimeUnit.studyGradeTypeId = #{studyGradeTypeId}
        AND (
                studyPlanDetail.subjectBlockId = #{subjectBlockId}
        OR      subjectResult.studyPlanDetailId IN (
                    SELECT studyPlanDetail.id 
                    FROM opuscollege.studyPlanDetail
                    INNER JOIN opuscollege.studyPlanCardinalTimeUnit ON studyPlanDetail.studyPlanCardinalTimeUnitId = studyPlanCardinalTimeUnit.id
                    INNER JOIN opuscollege.studyPlan ON studyPlanCardinalTimeUnit.studyPlanId = studyPlan.id
                    INNER JOIN opuscollege.subjectSubjectBlock ON studyPlanDetail.subjectBlockId = subjectSubjectBlock.subjectBlockId
                    WHERE studyPlanCardinalTimeUnit.studyGradeTypeId = #{studyGradeTypeId}
                    AND subjectSubjectBlock.subjectBlockId = #{subjectBlockId}            
                )
        )
        ORDER BY   studyPlanDetailId, subjectResultDate 
    </select>

    <insert id="addSubjectResult" parameterType="SubjectResult">
        insert into opuscollege.SubjectResult
        ( subjectId
        , studyPlanDetailId
        , subjectResultDate
        , mark
        , markDecimal
        , endGradeComment
        , staffMemberId
        , active
        , passed
        , subjectResultCommentId
        , writeWho
        ) values ( 
        #{subjectId}
        , #{studyPlanDetailId}
        , #{subjectResultDate}
        , #{mark}
        , #{markDecimal}
        , #{endGradeComment}
        , #{staffMemberId}
        , #{active}
        , #{passed}
        , #{subjectResultCommentId}
        , #{writeWho}
        )
        <selectKey keyProperty="id" resultType="int">
            SELECT currVal('opuscollege.subjectResultSeq')
        </selectKey>
    </insert>

    <insert id="addSubjectResultHistory" parameterType="SubjectResult">
        insert into audit.subjectResult_hist
        ( operation
        , writeWho
        <!--  , writeWhen: is written automatically-->
        , id
        , subjectId
        , studyPlanDetailId
        , subjectResultDate
        , mark
        , markDecimal
        , endGradeComment
        , staffMemberId
        , active
        , passed
        , subjectResultCommentId
        ) values (
          'I'
        , #{writeWho}
        , #{id}
        , #{subjectId}
        , #{studyPlanDetailId}
        , #{subjectResultDate}
        , #{mark}
        , #{markDecimal}
        , #{endGradeComment}
        , #{staffMemberId}
        , #{active}
        , #{passed}
        , #{subjectResultCommentId}
        )
    </insert>

    <update id="updateSubjectResult" parameterType="SubjectResult">
        update  opuscollege.SubjectResult
        set     subjectId              = #{subjectId}
        ,       studyPlanDetailId      = #{studyPlanDetailId}
        ,       subjectResultDate      = #{subjectResultDate}
        ,       mark                   = #{mark}
        ,       markDecimal            = #{markDecimal}
        ,       endGradeComment        = #{endGradeComment}
        ,       staffMemberId          = #{staffMemberId}
        ,       active                 = #{active}
        ,       passed                 = #{passed}
        ,       subjectResultCommentId = #{subjectResultCommentId}
        ,       writeWho               = #{writeWho}
        where   id = #{id}
    </update>

    <insert id="updateSubjectResultHistory" parameterType="SubjectResult">
        insert into audit.subjectResult_hist
        ( operation
        , writeWho
        <!--  , writeWhen: is written automatically-->
        , id
        , subjectId
        , studyPlanDetailId
        , subjectResultDate
        , mark
        , markDecimal
        , endGradeComment
        , staffMemberId
        , active
        , passed
        , subjectResultCommentId
        ) values (
          'U'
        , #{writeWho}
        , #{id}
        , #{subjectId}
        , #{studyPlanDetailId}
        , #{subjectResultDate}
        , #{mark}
        , #{markDecimal}
        , #{endGradeComment}
        , #{staffMemberId}
        , #{active}
        , #{passed}
        , #{subjectResultCommentId}
        )
    </insert>

    <delete id="deleteSubjectResult" parameterType="int">
        delete from opuscollege.SubjectResult
        where  id = #{value}
    </delete>

    <insert id="deleteSubjectResultHistory" parameterType="SubjectResult">
        insert into audit.subjectResult_hist
        ( operation
        , writeWho
        <!--  , writeWhen: is written automatically-->
        , id
        , subjectId
        , studyPlanDetailId
        , subjectResultDate
        , mark
        , markDecimal
        , endGradeComment
        , staffMemberId
        , active
        , passed
        , subjectResultCommentId
        ) values (
          'D'
        , #{writeWho}
        , #{id}
        , #{subjectId}
        , #{studyPlanDetailId}
        , #{subjectResultDate}
        , #{mark}
        , #{markDecimal}
        , #{endGradeComment}
        , #{staffMemberId}
        , #{active}
        , #{passed}
        , #{subjectResultCommentId}
        )
    </insert>

    <!-- find all SubjectResults for a specific subjectblock -->
    <select id="findSubjectResultsForSubjectBlock" parameterType="int" resultMap="SubjectResultResultMap"> 
        select opuscollege.subjectResult.* 
        from opuscollege.subjectResult
        INNER JOIN opuscollege.studyPlanDetail ON subjectResult.studyPlanDetailId = studyPlanDetail.id
        WHERE studyPlanDetail.subjectBlockId = #{value}
        AND (
            subjectResult.subjectId IN (
                SELECT studyPlanDetail.subjectId 
                FROM opuscollege.subjectSubjectBlock
                INNER JOIN opuscollege.studyPlanDetail ON studyPlanDetail.subjectBlockId = subjectSubjectBlock.subjectBlockId
                WHERE studyPlanDetail.subjectBlockId = #{value}
            )
            <!-- OR subjectResult.subjectId IN (
                SELECT studyPlanDetail.subjectId 
                FROM opuscollege.subjectBlockSubjectBlock
                INNER JOIN opuscollege.studyPlanDetail ON studyPlanDetail.subjectBlockId = subjectBlockSubjectBlock.subjectBlockIdParent
                WHERE studyPlanDetail.subjectBlockId = #{value}
            )  
            OR subjectResult.subjectId IN (
                SELECT studyPlanDetail.subjectId 
                FROM opuscollege.subjectBlockSubjectBlock
                INNER JOIN opuscollege.studyPlanDetail ON studyPlanDetail.subjectBlockId = subjectBlockSubjectBlock.subjectBlockIdChild
                WHERE studyPlanDetail.subjectBlockId = #{value}
            ) -->
        )
        ORDER BY subjectResult.subjectId         
    </select>


    <select id="findSubjectResult" parameterType="int" resultMap="SubjectResultResultMap">
        select opuscollege.subjectResult.*
        from   opuscollege.subjectResult
        where  id = #{value}
    </select>
    
    <select id="findSubjectResultByParams" parameterType="map" resultMap="SubjectResultResultMap">
        select  opuscollege.subjectResult.*
        from    opuscollege.subjectResult
        where   subjectId = #{subjectId}
        AND     studyPlanDetailId = #{studyPlanDetailId}
        AND     subjectResultDate = #{subjectResultDate}
        <if test='mark != null and mark != ""'>
            AND     mark = #{mark}
        </if>
        AND staffMemberId = #{staffMemberId}
    </select>

    <select id="findSubjectResultsByParams" parameterType="map" resultMap="SubjectResultResultMap">
        select  opuscollege.subjectResult.*
        from    opuscollege.subjectResult
        inner join opuscollege.studyplandetail on subjectResult.studyPlanDetailId = studyPlanDetail.id
        inner join opuscollege.studyplancardinaltimeunit on studyplandetail.studyplancardinaltimeunitid = studyplancardinaltimeunit.id
        inner join opuscollege.subject on subjectResult.subjectId = subject.id

        where true
        
        <if test='subjectId != null and subjectId != "0"'>
            AND subjectResult.subjectId = #{subjectId}
        </if>
        <if test='subjectCode != null and subjectCode != ""'>
            AND subject.subjectCode = #{subjectCode}
        </if>
        <if test='studyPlanDetailId != null and studyPlanDetailId != "0"'>
            AND studyPlanDetailId = #{studyPlanDetailId}
        </if>
        <if test='studyPlanCardinalTimeUnitId != null and studyPlanCardinalTimeUnitId != "0"'>
            AND studyPlanCardinalTimeUnitId = #{studyPlanCardinalTimeUnitId}
        </if>
        <if test="studyPlanId != null">
            AND studyplancardinaltimeunit.studyPlanId = #{studyPlanId}
        </if>
        <if test='passed != null and passed != ""'>
            AND     passed = #{passed}
        </if>
        <if test='active != null and active != ""'>
            AND     subjectResult.active = #{active}
        </if>
        
        <if test='orderBy != null and orderBy != ""'>
                order by ${orderBy}
        </if>
        <if test='limit != null and limit != ""'>
                limit ${limit}
        </if>
    </select>

    <!-- SQL that is used as is for finding records or for use as sub-select within select exists -->
    <sql id="selectSubjectResultsBySubjectId">

        (SELECT opuscollege.subjectResult.*
	        FROM   opuscollege.subjectResult
	        INNER JOIN opuscollege.studyPlanDetail ON subjectResult.studyPlanDetailId = studyPlanDetail.id
	        WHERE  subjectResult.subjectId = #{value}
        UNION
		SELECT opuscollege.subjectResult.*
	        FROM   opuscollege.subjectResult
	        INNER JOIN opuscollege.studyPlanDetail ON subjectResult.studyPlanDetailId = studyPlanDetail.id
	        WHERE subjectResult.studyPlanDetailId IN (
	                SELECT studyPlanDetail.id 
	                FROM opuscollege.studyPlanDetail
	                INNER JOIN opuscollege.subjectSubjectBlock ON studyPlanDetail.subjectBlockId = subjectSubjectBlock.subjectBlockId
	                WHERE subjectSubjectBlock.subjectId = #{value}                
                )
        )
    </sql>

    <select id="findSubjectResults" parameterType="int" resultMap="SubjectResultResultMap">
        <include refid="selectSubjectResultsBySubjectId"></include>
        ORDER BY   studyPlanDetailId, subjectResultDate 
    </select>

    <select id="existSubjectResultsForSubject" parameterType="int" resultType="boolean">
        select exists (
            <include refid="selectSubjectResultsBySubjectId"></include>
        )
    </select>

    <select id="findSubjectResultsForStudent" parameterType="map" resultMap="SubjectResultResultMap">
        select opuscollege.subjectResult.*
        from   opuscollege.subjectResult
        INNER JOIN opuscollege.studyPlanDetail ON subjectResult.studyPlanDetailId = studyPlanDetail.id
        INNER JOIN opuscollege.studyPlan ON studyPlanDetail.studyPlanId = studyPlan.id
        WHERE studyPlan.studentId = #{studentId}
        <if test='passed != null and passed != ""'>
            and subjectResult.passed = #{passed}
        </if>
            <!-- check on subject equality in all academic years -->
                and subjectResult.subjectid in
                (
                    select subject.id from opuscollege.subject
                    inner join opuscollege.subject equivalentSubject on 
                        equivalentSubject.primaryStudyId = subject.primaryStudyId
                        and equivalentSubject.subjectCode = subject.subjectCode
                    where equivalentSubject.id in
                     <foreach collection="equivalentSubjectIds" item="item" separator="," close=")" open="(">
                      #{item}
                    </foreach>
                )
        
    </select>
    
    <!-- find all SubjectResults for a specific SubjectSubjectBlock -->
    <select id="findSubjectResultsForSubjectSubjectBlock" parameterType="int" resultMap="SubjectResultResultMap"> 

        select subjectResult.* from opuscollege.subjectResult
        INNER JOIN opuscollege.studyplandetail ON subjectResult.studyplandetailid = studyplandetail.id
        INNER JOIN opuscollege.subjectSubjectBlock ON studyplandetail.subjectBlockId = subjectSubjectBlock.subjectBlockId
            AND subjectresult.subjectid = subjectSubjectBlock.subjectid
        WHERE subjectSubjectBlock.id = #{value}
        ORDER BY subjectResult.subjectId

    </select>
    
    <select id="findSubjectResultHistory" parameterType="map" resultMap="SubjectResultHistoryResultMap">
		select  DISTINCT
		   subjectresult_hist.operation,
		   subjectresult_hist.writewho,
		   subjectresult_hist.writewhen,
		   subjectresult_hist.mark,
		   subjectresult_hist.passed,
		   subjectresult_hist.subjectResultCommentId,
		   person.surnamefull AS surnamefull,
		   person.firstnamesfull AS firstnamesfull
		    
		FROM audit.subjectresult_hist
		INNER JOIN opuscollege.subject on subjectresult_hist.subjectId = subject.id
		INNER JOIN opuscollege.opususer ON split_part(subjectresult_hist.writewho, ':', 2)::int = opususer.id
		INNER JOIN opuscollege.person on opususer.personid = person.id
		INNER JOIN opuscollege.studyplandetail studyplandetail ON subjectresult_hist.studyplandetailid = studyplandetail.id
		INNER JOIN opuscollege.studyplan ON studyplandetail.studyplanid = studyplan.id
		INNER JOIN opuscollege.student student ON studyplan.studentid = student.studentid
		INNER JOIN opuscollege.person person_std on student.personid= person_std.id
		     
		WHERE subject.id=#{subjectId} and studyPlanDetail.id = #{studyPlanDetailId}
		ORDER BY subjectresult_hist.writewhen DESC
	</select>
    
</mapper>
