<?xml version="1.0" encoding="UTF-8"?><!--
  ***** BEGIN LICENSE BLOCK *****
  Version: MPL 1.1/GPL 2.0/LGPL 2.1
  
  The contents of this file are subject to the Mozilla Public License Version
  1.1 (the "License"); you may not use this file except in compliance with
  the License. You may obtain a copy of the License at
  http://www.mozilla.org/MPL/
  
  Software distributed under the License is distributed on an "AS IS" basis,
  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
  for the specific language governing rights and limitations under the
  License.
  
  The Original Code is Opus-College college module code.
  
  The Initial Developer of the Original Code is
  Center for Information Services, Radboud University Nijmegen.
  Portions created by the Initial Developer are Copyright (C) 2008
  the Initial Developer. All Rights Reserved.
  
  Contributor(s):
    For Java files, see Javadoc @author tags.
  
  Alternatively, the contents of this file may be used under the terms of
  either the GNU General Public License Version 2 or later (the "GPL"), or
  the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
  in which case the provisions of the GPL or the LGPL are applicable instead
  of those above. If you wish to allow use of your version of this file only
  under the terms of either the GPL or the LGPL, and not to allow others to
  use your version of this file under the terms of the MPL, indicate your
  decision by deleting the provisions above and replace them with the notice
  and other provisions required by the GPL or the LGPL. If you do not delete
  the provisions above, a recipient may use your version of this file under
  the terms of any one of the MPL, the GPL or the LGPL.
  
  ***** END LICENSE BLOCK *****
--><!--Converted at: Wed Aug 26 14:02:01 CEST 2015-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.uci.opus.college.persistence.SubjectBlockMapper">

    <!-- resultmap to define complete subjectblock -->
    <resultMap id="SubjectBlockResultMap" type="SubjectBlock">
        <id property="id" column="id"/>
        <result property="primaryStudyId" column="primaryStudyId"/>
        <result property="subjectBlockCode" column="subjectBlockCode"/>
        <result property="subjectBlockDescription" column="subjectBlockDescription"/>
        <result property="targetGroupCode" column="targetGroupCode"/>
        <result property="blockTypeCode" column="blockTypeCode"/>
        <result property="brsMaxContactHours" column="brsMaxContactHours"/>
        <result property="studyTimeCode" column="studyTimeCode"/>
        <result property="currentAcademicYearId" column="currentAcademicYearId"/>
        <result property="freeChoiceOption" column="freeChoiceOption"/>
        <association property="primaryStudy" select="org.uci.opus.college.persistence.StudyMapper.findStudy" column="primaryStudyId" />
        <collection property="subjectSubjectBlocks" fetchType="lazy" select="findAllSubjectSubjectBlocks" column="id"/>
        <collection property="subjectBlockStudyGradeTypes" fetchType="lazy" select="findAllSubjectBlockStudyGradeTypesForSubjectBlock" column="id"/>
    </resultMap>

    <!-- resultmap to define complete SubjectStudyGradeType -->
    <resultMap id="BasicSubjectBlockStudyGradeTypeResultMap" type="SubjectBlockStudyGradeType">
        <id property="id" column="id"/>
        <result property="cardinalTimeUnitNumber" column="cardinalTimeUnitNumber"/>
        <result property="rigidityTypeCode" column="rigidityTypeCode"/>
        <result property="importanceTypeCode" column="importanceTypeCode"/>
        <result property="active" column="active"/>
        <result property="importanceTypeCode" column="importanceTypeCode"/>
    </resultMap>

    <resultMap id="SubjectBlockStudyGradeTypeResultMap" type="SubjectBlockStudyGradeType" extends="BasicSubjectBlockStudyGradeTypeResultMap">
        <result property="studyGradeType.id" column="studyGradeType.id"/>
        <result property="studyGradeType.studyId" column="studyGradeType.studyId"/>
        <result property="studyGradeType.studyDescription" column="studyGradeType.studyDescription"/> 
        <result property="studyGradeType.gradeTypeCode" column="studyGradeType.gradeTypeCode"/>
<!--         <result property="studyGradeType.gradeTypeDescription" column="studyGradeType.gradeTypeDescription"/> -->
        <result property="studyGradeType.numberOfCardinalTimeUnits" column="studyGradeType.numberOfCardinalTimeUnits"/>
        <result property="studyGradeType.maxNumberOfCardinalTimeUnits" column="studyGradeType.maxNumberOfCardinalTimeUnits"/>
        <result property="studyGradeType.currentAcademicYearId" column="studyGradeType.currentAcademicYearId"/>
        <result property="studyGradeType.cardinalTimeUnitCode" column="studyGradeType.cardinalTimeUnitCode"/>
        <result property="studyGradeType.studyFormCode" column="studyGradeType.studyFormCode"/>
        <result property="studyGradeType.studyTimeCode" column="studyGradeType.studyTimeCode"/>             
        <result property="subjectBlock.id" column="subjectBlock.id"/>
        <result property="subjectBlock.subjectBlockCode" column="subjectBlock.subjectBlockCode"/>
        <result property="subjectBlock.subjectBlockDescription" column="subjectBlock.subjectBlockDescription"/>
        <result property="subjectBlock.primaryStudyId" column="subjectBlock.primaryStudyId"/>
        <result property="subjectBlock.currentAcademicYearId" column="subjectBlock.currentAcademicYearId"/>
        <result property="subjectBlock.studyTimeCode" column="subjectBlock.studyTimeCode"/>
        <association property="subjectBlock.primaryStudy" select="org.uci.opus.college.persistence.StudyMapper.findStudy" column="subjectBlock.primaryStudyId" />
        <collection property="subjectBlockPrerequisites" select="findSubjectBlockPrerequisites" column="id"/>
    </resultMap>

    <!-- NB: Cannot join lookup tables (like gradetype) because used in association/select where no preferredLanguage is available -->
    <sql id="selectSubjectBlockStudyGradeType_fragment">
        select  subjectBlockStudyGradeType.id               as id
        ,       cardinalTimeUnitNumber                      as cardinalTimeUnitNumber
        ,       rigidityTypeCode                            as rigidityTypeCode
        ,       importanceTypeCode                          as importanceTypeCode
        ,       subjectBlockStudyGradeType.active			as active
        ,       subjectBlockStudyGradeType.studyGradeTypeId as "studyGradeType.id"
        ,       subjectBlock.id                             as "subjectBlock.id"
        ,       subjectBlock.subjectBlockCode               as "subjectBlock.subjectBlockCode"
        ,       subjectBlock.subjectBlockDescription        as "subjectBlock.subjectBlockDescription"
        ,       subjectBlock.primaryStudyId                 as "subjectBlock.primaryStudyId"
        ,       subjectBlock.currentAcademicYearId          as "subjectBlock.currentAcademicYearId"
        ,       subjectBlock.studyTimeCode                  as "subjectBlock.studyTimeCode"
        ,       study.id                                    as "studyGradeType.studyId"
        ,       study.studyDescription                      as "studyGradeType.studyDescription"
        ,       studyGradeType.gradeTypeCode                as "studyGradeType.gradeTypeCode"
<!--         ,       gradeType.description                       as "studyGradeType.gradeTypeDescription" -->
        ,       studyGradeType.numberOfCardinalTimeUnits    as "studyGradeType.numberOfCardinalTimeUnits"
        ,       studyGradeType.maxNumberOfCardinalTimeUnits as "studyGradeType.maxNumberOfCardinalTimeUnits"
        ,       studyGradeType.currentAcademicYearId        as "studyGradeType.currentAcademicYearId"
        ,       studyGradeType.cardinalTimeUnitCode         as "studyGradeType.cardinalTimeUnitCode"
        ,       studyGradeType.studyFormCode                as "studyGradeType.studyFormCode"
        ,       studyGradeType.studyTimeCode                as "studyGradeType.studyTimeCode"
        from    opusCollege.subjectBlockStudyGradeType
        inner   join opusCollege.subjectBlock on subjectBlock.id = subjectBlockStudyGradeType.subjectBlockId
        inner   join opusCollege.studyGradeType on studyGradeType.id = subjectBlockStudyGradeType.studyGradeTypeId
        inner   join opusCollege.study on study.id = studyGradeType.studyId
<!--         inner   join opusCollege.gradeType on gradeType.code = studyGradeType.gradeTypeCode -->
    </sql>

    <sql id="selectSubjectBlockStudyGradeType_fragment2">
        select  subjectBlockStudyGradeType.id               as id
        ,       cardinalTimeUnitNumber                      as cardinalTimeUnitNumber
        ,       rigidityTypeCode                            as rigidityTypeCode
        ,       importanceTypeCode                          as importanceTypeCode
        ,       subjectBlockStudyGradeType.active			as active
        ,       subjectBlockStudyGradeType.studyGradeTypeId as "studyGradeType.id"
        ,       subjectBlock.id                             as "subjectBlock.id"
        ,       subjectBlock.subjectBlockCode               as "subjectBlock.subjectBlockCode"
        ,       subjectBlock.subjectBlockDescription        as "subjectBlock.subjectBlockDescription"
        ,       subjectBlock.primaryStudyId                 as "subjectBlock.primaryStudyId"
        ,       subjectBlock.currentAcademicYearId          as "subjectBlock.currentAcademicYearId"
        ,       subjectBlock.studyTimeCode                  as "subjectBlock.studyTimeCode"
        ,       study.id                                    as "studyGradeType.studyId"
        ,       study.studyDescription                      as "studyGradeType.studyDescription"
        ,       gradeType.code                              as "studyGradeType.gradeTypeCode"
<!--         ,       gradeType.description                       as "studyGradeType.gradeTypeDescription" -->
        ,       studyGradeType.numberOfCardinalTimeUnits    as "studyGradeType.numberOfCardinalTimeUnits"
        ,       studyGradeType.maxNumberOfCardinalTimeUnits as "studyGradeType.maxNumberOfCardinalTimeUnits"
        ,       studyGradeType.currentAcademicYearId        as "studyGradeType.currentAcademicYearId"
        ,       studyGradeType.cardinalTimeUnitCode         as "studyGradeType.cardinalTimeUnitCode"
        ,       studyGradeType.studyFormCode                as "studyGradeType.studyFormCode"
        ,       studyGradeType.studyTimeCode                as "studyGradeType.studyTimeCode"
        from    opusCollege.subjectBlockStudyGradeType
        inner   join opusCollege.subjectBlock on subjectBlock.id = subjectBlockStudyGradeType.subjectBlockId
        inner   join opusCollege.studyGradeType on studyGradeType.id = subjectBlockStudyGradeType.studyGradeTypeId
        inner   join opusCollege.study on study.id = studyGradeType.studyId
        inner   join opusCollege.gradeType on gradeType.code = studyGradeType.gradeTypeCode
        inner   join opusCollege.organizationalunit on opuscollege.study.organizationalUnitId = organizationalunit.id
	    inner   join opusCollege.branch on opuscollege.branch.id = organizationalunit.branchId
	    inner   join opusCollege.institution on opuscollege.institution.id = branch.institutionId
    </sql>

    <select id="findSubjectBlockStudyGradeTypes" parameterType="map" resultMap="SubjectBlockStudyGradeTypeResultMap">
        <include refid="selectSubjectBlockStudyGradeType_fragment"/>
        inner   join opusCollege.gradeType on gradeType.code = studyGradeType.gradeTypeCode and gradeType.lang = #{preferredLanguage}
        where true
<!--         where 	gradeType.lang = #{preferredLanguage}    -->
        <if test='subjectBlockId != null and subjectBlockId != "0"'>
    		and subjectBlockStudyGradeType.subjectBlockId = #{subjectBlockId}
        </if>
        <if test='studyId != null and studyId != "0"'>
			and	(opuscollege.studyGradeType.studyId = #{studyId}
			<if test="importanceTypeMajor != null">
                 and subjectBlockStudyGradeType.importanceTypeCode = #{importanceTypeMajor}
            </if>
            <if test='minor1Id != null and minor1Id != "0"'>
                OR (opuscollege.studyGradeType.studyId =  #{minor1Id}
                and subjectBlockStudyGradeType.importanceTypeCode = #{importanceTypeMinor})
            </if>
            )
    	</if>
        <if test='studyGradeTypeId != null and studyGradeTypeId != "0"'>
			and	(opuscollege.studyGradeType.id = #{studyGradeTypeId}
            <if test='minorStudyGradeTypeId != null and minorStudyGradeTypeId != "0"'>
                  or opuscollege.studyGradeType.id = #{minorStudyGradeTypeId}
            </if>
            )
    	</if>
        <if test='currentAcademicYearId != null and currentAcademicYearId != "0"'>
            and opuscollege.studyGradeType.currentAcademicYearId = #{currentAcademicYearId}
        </if>
        <if test='cardinalTimeUnitNumber != null and cardinalTimeUnitNumber != "0"'>
			and		(opuscollege.subjectBlockStudyGradeType.cardinalTimeUnitNumber = #{cardinalTimeUnitNumber}
					OR opuscollege.subjectBlockStudyGradeType.cardinalTimeUnitNumber = 0)
    	</if>
    	<if test="rigidityTypeCode != null">
    		and		opuscollege.subjectBlockStudyGradeType.rigidityTypeCode = #{rigidityTypeCode}
    	</if>
        <if test='subjectBlockIds != null and subjectBlockIds.size() > 0'>
            and subjectBlockStudyGradeType.subjectBlockId IN
             <foreach collection="subjectBlockIds" item="item" separator="," close=")" open="(">
                #{item}
            </foreach>
        </if>
        <if test='studyGradeTypeIds != null and studyGradeTypeIds.size() > 0'>
            and subjectBlockStudyGradeType.studyGradeTypeId IN
             <foreach collection="studyGradeTypeIds" item="item" separator="," close=")" open="(">
                #{item}
            </foreach>
        </if>
        <if test='studyPlanDetailIds != null and studyPlanDetailIds.size() > 0'>
            AND EXISTS (SELECT 1 FROM opuscollege.studyplandetail
                  WHERE studyplandetail.studyGradeTypeid = studyGradeType.id
                    AND studyplandetail.subjectblockid = subjectblock.id
                    AND studyplandetail.id IN
             <foreach collection="studyPlanDetailIds" item="item" separator="," close=")" open="(">
                #{item}
            </foreach>
            )
        </if>
        order   by lower(study.studyDescription), lower(gradeType.description)
    </select>

    <select id="findSubjectBlockStudyGradeTypesForSubjectBlockTransition" parameterType="map" resultMap="SubjectBlockStudyGradeTypeResultMap">
        <include refid="selectSubjectBlockStudyGradeType_fragment"/>
        inner   join opusCollege.gradeType on gradeType.code = studyGradeType.gradeTypeCode and gradeType.lang = #{preferredLanguage}
        inner join opuscollege.studygradetype targetSGT
                on  targetSGT.studyId = studyGradeType.studyId
                and targetSGT.gradeTypeCode = studyGradeType.gradeTypeCode
                and targetSGT.studyTimeCode = studyGradeType.studyTimeCode
                and targetSGT.studyFormCode = studyGradeType.studyFormCode
                and targetSGT.currentAcademicYearId = #{targetAcademicYearId}
        where   studyGradeType.currentAcademicYearId = #{sourceAcademicYearId}
        <if test='subjectBlockIds != null and subjectBlockIds.size() > 0'>
            and subjectBlockStudyGradeType.subjectBlockId IN
             <foreach collection="subjectBlockIds" item="item" separator="," close=")" open="(">
                #{item}
            </foreach>
        </if>
        order   by lower(study.studyDescription), lower(gradeType.description)
    </select>

    <select id="findSubjectBlockStudyGradeTypesForStudyGradeTypeTransition" parameterType="map" resultMap="SubjectBlockStudyGradeTypeResultMap">
        <include refid="selectSubjectBlockStudyGradeType_fragment"/>
        inner   join opusCollege.gradeType on gradeType.code = studyGradeType.gradeTypeCode and gradeType.lang = #{preferredLanguage}
        inner join opuscollege.subjectblock targetSubjectBlock
                on  targetSubjectBlock.subjectBlockCode = subjectBlock.subjectBlockCode
                and targetSubjectBlock.currentAcademicYearId = #{targetAcademicYearId}
        where   subjectBlock.currentAcademicYearId = #{sourceAcademicYearId}
        <if test='studyGradeTypeIds != null and studyGradeTypeIds.size() > 0'>
            and subjectBlockStudyGradeType.studyGradeTypeId IN
             <foreach collection="studyGradeTypeIds" item="item" separator="," close=")" open="(">
                #{item}
            </foreach>
        </if>
        order   by lower(study.studyDescription), lower(gradeType.description)
    </select>

    <select id="findSubjectBlockStudyGradeType" parameterType="map" resultMap="SubjectBlockStudyGradeTypeResultMap">
        <include refid="selectSubjectBlockStudyGradeType_fragment"/>
        inner   join opusCollege.gradeType on gradeType.code = studyGradeType.gradeTypeCode and gradeType.lang = #{preferredLanguage}
        where   subjectBlockStudyGradeType.id  = #{subjectBlockStudyGradeTypeId}
    </select>

    <!-- Return a plain SubjectBlockStudyGradeType object, so that no preferrredLanguage parameter is necessary -->
    <select id="findPlainSubjectBlockStudyGradeType" parameterType="int" resultMap="BasicSubjectBlockStudyGradeTypeResultMap">
        select  subjectBlockStudyGradeType.*
        from opuscollege.subjectBlockStudyGradeType
        WHERE subjectBlockStudyGradeType.id = #{id}
    </select>

    <select id="findAllSubjectBlocks" resultType="SubjectBlock">
        select  *
        from    opuscollege.subjectBlock
        ORDER   by currentAcademicYearId, lower(subjectBlockDescription)
    </select>
    
    <select id="findSubjectBlocksByStudy" parameterType="int" resultType="SubjectBlock">
        select  subjectBlockCode
        ,       subjectBlockDescription
        from    opusCollege.subjectBlock
        where   primaryStudyId = #{studyId}
    </select>
    
    <parameterMap id="findSubjectBlockStudyGradeTypesParam" type="map">
        <parameter property="institutionId"/>
        <parameter property="branchId"/>
        <parameter property="organizationalUnitId"/>
        <parameter property="studyId"/>        
        <parameter property="institutionTypeCode"/> 
        <parameter property="currentAcademicYearId"/> 
        <parameter property="cardinalTimeUnitNumber"/>
        <parameter property="rigidityTypeCode"/> 
        <parameter property="importanceTypeCode"/> 
    </parameterMap>
   
    <select id="findSubjectBlocks" parameterType="map" resultType="SubjectBlock">
        select opuscollege.subjectBlock.* 
        from opuscollege.subjectBlock
        INNER JOIN opuscollege.academicyear ON subjectBlock.currentacademicyearid = academicyear.id
        WHERE subjectBlock.id IN (
        	SELECT distinct(subjectBlock.id) FROM opuscollege.subjectBlock
            <if test='(rigidityTypeCode != null and rigidityTypeCode != "") or (importanceTypeCode != null and importanceTypeCode != "") or (studyGradeTypeId != null and studyGradeTypeId != "0")'>
       	       	INNER JOIN opuscollege.subjectBlockStudyGradeType on subjectBlockStudyGradeType.subjectBlockId = subjectBlock.id
       			INNER JOIN opuscollege.studyGradeType on subjectBlockStudyGradeType.studyGradeTypeId = studyGradeType.id
	       	</if>
 	       	INNER JOIN opuscollege.study on opuscollege.subjectBlock.primarystudyId = study.id
	        INNER JOIN opuscollege.organizationalunit on opuscollege.study.organizationalUnitId = organizationalunit.id
	        INNER JOIN opuscollege.branch on opuscollege.branch.id = organizationalunit.branchId
	        INNER JOIN opuscollege.institution on opuscollege.institution.id = branch.institutionId
	        WHERE true
            <if test="institutionTypeCode != null">
                and opuscollege.institution.institutionTypeCode = #{institutionTypeCode}
            </if>
            <if test='institutionId != null and institutionId != "0"'>
                and institution.id = #{institutionId}
            </if>
            <if test='branchId != null and branchId != "0"'>
                and branch.id = #{branchId}
	        </if>
            <if test='organizationalUnitId != null and organizationalUnitId != "0"'>
	            and organizationalunit.id in (select id from opuscollege.crawl_tree(#{organizationalUnitId}, 0)) 
            </if>
            <if test='studyId != null and studyId != "0"'>
	            and (opuscollege.study.id = #{studyId}
	            <if test="importanceTypeMajor != null">
                    and subjectBlockStudyGradeType.importanceTypeCode = #{importanceTypeMajor}
                </if>
                <if test='minor1Id != null and minor1Id != "0"'>
                    OR (opuscollege.study.id  =  #{minor1Id} and subjectBlockStudyGradeType.importanceTypeCode = #{importanceTypeMinor})
                </if>
                )        
            </if>
	        <if test="cardinalTimeUnitNumber != null">
	            and (subjectBlockStudyGradeType.cardinalTimeUnitNumber = #{cardinalTimeUnitNumber} 
	             	OR subjectBlockStudyGradeType.cardinalTimeUnitNumber = 0)
	        </if>
            <if test='currentAcademicYearId != null and currentAcademicYearId != "0"'>
               and subjectBlock.currentAcademicYearId = #{currentAcademicYearId}  
	        </if>
            <if test='rigidityTypeCode != null and rigidityTypeCode != ""'>
                and subjectBlockStudyGradeType.rigidityTypeCode = #{rigidityTypeCode} 
	        </if>
            <if test='studyGradeTypeId != null and studyGradeTypeId != "0"'>
                and subjectBlockStudyGradeType.studyGradeTypeId = #{studyGradeTypeId} 
            </if>
            <if test='searchValue != null and searchValue != ""'>
                and opuscollege.remove_diacritics(lower(subjectBlock.subjectBlockCode || subjectBlock.subjectBlockDescription)) 
                like '%' || opuscollege.remove_diacritics(lower(#{searchValue})) || '%'
            </if>
            <if test='subjectBlockIds != null and subjectBlockIds.size() > 0'>
                and subjectBlock.id IN
                 <foreach collection="subjectBlockIds" item="item" separator="," close=")" open="(">
                  #{item}
                </foreach>
            </if>
         )
        order by lower(subjectBlockDescription), academicyear.description DESC
    </select>

    <select id="findSubjectBlockStudyGradeTypes2" parameterMap="findSubjectBlockStudyGradeTypesParam" resultMap="SubjectBlockStudyGradeTypeResultMap">
       <include refid="selectSubjectBlockStudyGradeType_fragment2"/>
        WHERE subjectBlockStudyGradeType.id IN (
        	SELECT distinct(subjectBlockStudyGradeType.id) FROM opuscollege.subjectBlockStudyGradeType
            <if test='(rigidityTypeCode != null and rigidityTypeCode != "") or (importanceTypeCode != null and importanceTypeCode != "")'>
       	         INNER JOIN opuscollege.studyGradeType on subjectBlockStudyGradeType.studyGradeTypeId = studyGradeType.id
	       	</if>
	        WHERE opuscollege.institution.institutionTypeCode = #{institutionTypeCode}
            <if test='institutionId != null and institutionId != "0"'>
                and institution.id = #{institutionId}
            </if>
            <if test='branchId != null and branchId != "0"'>
                and branch.id = #{branchId}
            </if>
            <if test='organizationalUnitId != null and organizationalUnitId != "0"'>
                and organizationalunit.id in (select id from opuscollege.crawl_tree(#{organizationalUnitId}, 0)) 
            </if>
            <if test='studyId != null and studyId != "0"'>
                and (opuscollege.study.id = #{studyId}
                <if test="importanceTypeMajor != null">
                    and subjectBlockStudyGradeType.importanceTypeCode = #{importanceTypeMajor}
                </if>
                <if test='minor1Id != null and minor1Id != "0"'>
                    OR (opuscollege.study.id  =  #{minor1Id} and subjectBlockStudyGradeType.importanceTypeCode = #{importanceTypeMinor})
                </if>
                )        
            </if>
            <if test="cardinalTimeUnitNumber != null">
	            and (subjectBlockStudyGradeType.cardinalTimeUnitNumber = #{cardinalTimeUnitNumber} 
	             	OR subjectBlockStudyGradeType.cardinalTimeUnitNumber = 0)
	        </if>
            <if test='currentAcademicYearId != null and currentAcademicYearId != "0"'>
               and subjectBlock.currentAcademicYearId = #{currentAcademicYearId}  
            </if>
            <if test='rigidityTypeCode != null and rigidityTypeCode != ""'>
                and subjectBlockStudyGradeType.rigidityTypeCode = #{rigidityTypeCode} 
            </if>
        )
        order   by lower(subjectBlock.subjectBlockDescription), lower(gradeType.description)
    </select>

    <!-- find one subjectblock -->
    <select id="findSubjectBlock" parameterType="int" resultMap="SubjectBlockResultMap"> 
        select *
        from   opuscollege.subjectBlock
        where  id = #{value}
    </select>

    <!-- find one subject block by several parameters -->
    <select id="findSubjectBlockByParams" parameterType="map" resultMap="SubjectBlockResultMap"> 
        select *
        from   opusCollege.subjectBlock
        where  subjectBlockCode = #{code} 
        <if test='currentAcademicYearId != null and currentAcademicYearId != "0"'>
            and  currentAcademicYearId = #{currentAcademicYearId}
        </if>
        <if test='description != null and description != ""'>
            AND    subjectBlockDescription = #{description}
        </if>
    </select>
    
    <select id="findSubjectBlocksWithResultMap" parameterType="map" resultMap="SubjectBlockResultMap">
        select subjectBlock.*
        from opuscollege.subjectBlock
        WHERE subjectBlock.id IN (
            SELECT  distinct(subjectBlock.id) 
            FROM                opuscollege.subjectBlock
            LEFT OUTER JOIN     opuscollege.subjectBlockStudyGradeType on subjectBlockStudyGradeType.subjectBlockId = subjectBlock.id
            LEFT OUTER JOIN     opuscollege.studyGradeType on subjectBlockStudyGradeType.studyGradeTypeId = studyGradeType.id
            INNER JOIN          opuscollege.study on subjectBlock.primarystudyId = study.id
            INNER JOIN          opuscollege.organizationalunit on study.organizationalUnitId = organizationalunit.id
            WHERE true
            <if test='organizationalUnitId != null and organizationalUnitId != "0"'>
                and organizationalunit.id in (select id from opuscollege.crawl_tree(#{organizationalUnitId}, 0))
            </if>
            <if test='studyId != null and studyId != "0"'>
                and (study.id = #{studyId}
                <if test="importanceTypeMajor != null">
                    and subjectBlockStudyGradeType.importanceTypeCode = #{importanceTypeMajor}
                </if>
                <if test='minor1Id != null and minor1Id != "0"'>
                    OR (study.id = #{minor1Id} and subjectBlockStudyGradeType.importanceTypeCode = #{importanceTypeMinor})
                </if>
                )        
            </if>
            <if test="cardinalTimeUnitNumber != null">
                and subjectBlockStudyGradeType.cardinalTimeUnitNumber = #{cardinalTimeUnitNumber}
            </if>
            <if test="cardinalTimeUnitNumberExact != null">
                and subjectBlockStudyGradeType.cardinalTimeUnitNumber = #{cardinalTimeUnitNumberExact}
            </if>
            <if test='studyGradeTypeId != null and studyGradeTypeId != "0"'>
                and (subjectBlockStudyGradeType.studyGradeTypeId = #{studyGradeTypeId}
                <if test='minorStudyGradeTypeId != null and minorStudyGradeTypeId != "0"'>
                      or subjectBlockStudyGradeType.studyGradeTypeId = #{minorStudyGradeTypeId}
                </if>
                )
            </if>
            <if test='currentAcademicYearId != null and currentAcademicYearId != "0"'>
               and subjectBlock.currentAcademicYearId = #{currentAcademicYearId}  
            </if>
            <if test='rigidityTypeCode != null and rigidityTypeCode != ""'>
                and subjectBlockStudyGradeType.rigidityTypeCode = #{rigidityTypeCode} 
            </if>
         )
        order   by lower(subjectBlockDescription)
    </select>

    <select id="findAllSubjectSubjectBlocks" parameterType="int" resultType="SubjectSubjectBlock">
        <include refid="org.uci.opus.college.persistence.SubjectMapper.selectSubjectSubjectBlock_fragment"/>
        from   opusCollege.subjectSubjectBlock
        inner  join opusCollege.subject on subject.id = subjectSubjectBlock.subjectId
        where  subjectSubjectBlock.subjectBlockId = #{value}
    </select>

    <insert id="addSubjectBlock" parameterType="SubjectBlock">
        insert into opuscollege.subjectBlock ( 
        primaryStudyId
	    , subjectBlockCode 
        , subjectBlockDescription
		, targetGroupCode
        <!-- , brsApplyingToSubjectBlock -->
        , brsPassingSubjectBlock
        , blockTypeCode
        , brsMaxContactHours
        , studyTimeCode
        , currentAcademicYearId
        , freeChoiceOption
        ) values ( 
        #{primaryStudyId}
        , #{subjectBlockCode}
        , #{subjectBlockDescription}
		, #{targetGroupCode}
        <!--, #{brsApplyingToSubjectBlock} -->
        , #{brsPassingSubjectBlock}
        , #{blockTypeCode}
        , #{brsMaxContactHours}
        , #{studyTimeCode}
        , #{currentAcademicYearId}
        , #{freeChoiceOption}
        )
        <selectKey keyProperty="id" resultType="int">
            SELECT currVal('opuscollege.subjectBlockSeq')
        </selectKey>
    </insert> 

    <update id="updateSubjectBlock" parameterType="SubjectBlock">
        update  opuscollege.subjectBlock
        set primaryStudyId        				    = #{primaryStudyId}
        ,   subjectBlockCode						= #{subjectBlockCode}
        ,   subjectBlockDescription					= #{subjectBlockDescription}
        ,   targetGroupCode       					= #{targetGroupCode}
       <!-- ,   brsApplyingToSubjectBlock     			= #{brsApplyingToSubjectBlock}-->
        ,   brsPassingSubjectBlock     				= #{brsPassingSubjectBlock}
        , 	blockTypeCode 							= #{blockTypeCode}
        , 	brsMaxContactHours 						= #{brsMaxContactHours}
        , 	studyTimeCode 							= #{studyTimeCode}
        , 	currentAcademicYearId 					= #{currentAcademicYearId}
		,  freeChoiceOption							= #{freeChoiceOption}
        where   id = #{id}
    </update>

    <delete id="deleteAllSubjectsFromSubjectBlock" parameterType="int">
        delete from opuscollege.subjectSubjectBlock
        where  subjectBlockId = #{value}
    </delete>

    <delete id="deleteSubjectBlock" parameterType="int">
        delete from opuscollege.SubjectBlock
        where  id = #{value}
    </delete>

    <!-- find all subjectBlocks for one Study -->
    <select id="findAllSubjectBlocksForStudy" parameterType="int" resultType="SubjectBlock"> 
        select opuscollege.subjectBlock.* 
        from opuscollege.subjectBlock
        INNER JOIN opuscollege.subjectBlockStudygradetype on opuscollege.subjectBlock.id = subjectBlockStudygradetype.subjectBlockId
        INNER JOIN opuscollege.studyGradeType ON subjectBlockStudygradetype.studyGradeTypeId = studyGradeType.id
        WHERE studyGradeType.studyId = #{value}
        ORDER by studyGradeTypeId, currentAcademicYearId, lower(subjectBlockDescription)
    </select>
    
    <!-- Find the subject blocks with a distinct code for the given study -->
    <select id="findSubjectBlocksWithDistinctCodeForStudy" parameterType="int" resultType="SubjectBlock"> 
        select DISTINCT
           subjectblock.subjectblockcode,
           subjectblock.subjectblockdescription,
           subjectblock.active,
           subjectblock.targetgroupcode,
           subjectblock.registrationdate,
           subjectblock.brspassingsubjectblock,
           subjectblock.blocktypecode,
           subjectblock.brsmaxcontacthours,
           subjectblock.studytimecode,
           subjectblock.primarystudyid,
           subjectblock.freechoiceoption
        from opuscollege.subjectBlock
        INNER JOIN opuscollege.subjectBlockStudygradetype on opuscollege.subjectBlock.id = subjectBlockStudygradetype.subjectBlockId
        INNER JOIN opuscollege.studyGradeType ON subjectBlockStudygradetype.studyGradeTypeId = studyGradeType.id
        WHERE studyGradeType.studyId = 12

        ORDER by subjectblock.subjectblockcode
    </select>
    
    <!-- find all subjectBlocks for one Subject -->
    <select id="findSubjectBlocksForSubject" parameterType="map" resultType="SubjectBlock"> 
        select subjectBlock.* 
        from opuscollege.subjectBlock
        INNER JOIN opuscollege.subjectBlockStudygradetype on opuscollege.subjectBlock.id = subjectBlockStudygradetype.subjectBlockId
        INNER JOIN opuscollege.studyGradeType on opuscollege.subjectBlockStudygradetype.studyGradeTypeId = studyGradeType.id
        INNER JOIN opuscollege.subjectSubjectBlock on subjectSubjectBlock.subjectBlockId = subjectBlock.id
        WHERE subjectSubjectBlock.subjectId = #{subjectId}
        AND opuscollege.studyGradeType.studyId = #{studyId}
        ORDER by studyGradeTypeId, currentAcademicYearId, lower(subjectBlockDescription)
    </select>

    <!-- find all Subjects for one subjectBlock-->
    <select id="findSubjectsForSubjectBlock" parameterType="int" resultType="Subject"> 
        select opuscollege.subject.* 
        from opuscollege.subject
        inner  join opuscollege.subjectSubjectBlock on subjectSubjectBlock.subjectId = subject.id
        WHERE subjectSubjectBlock.subjectBlockId = #{value}
        order   by lower(subjectDescription)
    </select>

    <!-- find all Subjects for one subjectBlock within a studyplandetail, 
    		which means include all subjects within a subjectblocks -->
    <select id="findSubjectsForSubjectBlockInStudyPlainDetail" parameterType="int" resultType="Subject"> 
		SELECT 	opuscollege.subject.* 
        FROM 	opuscollege.subject
		INNER  	join opuscollege.subjectSubjectBlock on subjectSubjectBlock.subjectId = subject.id
		INNER 	join opuscollege.subjectBlock on subjectSubjectBlock.subjectBlockId = subjectBlock.id
        WHERE	subjectBlock.id = #{value}
        AND 	( 
        		subject.id in (
					select subjectId from opuscollege.subjectSubjectBlock 
					where opuscollege.subjectSubjectBlock.subjectBlockId = #{value}
				)
		)
        ORDER   by lower(subjectDescription)
    </select>

    <!-- find all subjectBlocks for one StudyPlan -->
    <select id="findSubjectBlocksForStudyPlan" parameterType="int" resultType="SubjectBlock"> 
        select opuscollege.subjectBlock.* 
        from opuscollege.subjectBlock
        inner  join opuscollege.studyPlanDetail on studyPlanDetail.subjectBlockId = subjectBlock.id
        WHERE opuscollege.studyPlanDetail.studyPlanId = #{value}
        ORDER by primaryStudyId, currentAcademicYearId, lower(subjectBlockDescription)
    </select> 

    <!-- find all subjectBlocks for one StudyPlan -->
    <select id="findSubjectBlocksForStudyPlanCardinalTimeUnit" parameterType="int" resultType="SubjectBlock"> 
        select opuscollege.subjectBlock.* 
        from opuscollege.subjectBlock
        inner  join opuscollege.studyPlanDetail on studyPlanDetail.subjectBlockId = subjectBlock.id
        WHERE opuscollege.studyPlanDetail.studyPlanCardinalTimeUnitId = #{value}
        ORDER by primaryStudyId, currentAcademicYearId, lower(subjectBlockDescription)
    </select> 

    <select id="findAllSubjectBlocksForStudyGradeType" parameterType="map" resultType="SubjectBlock"> 
        select opuscollege.subjectBlock.* 
        from opuscollege.subjectBlock
        inner  join opuscollege.subjectBlockStudyGradeType on subjectBlock.id = subjectBlockStudyGradeType.subjectBlockId
        INNER JOIN opuscollege.studyGradeType on opuscollege.subjectBlockStudyGradeType.studyGradeTypeId = studyGradeType.id
        WHERE opuscollege.studyGradeType.id = #{studyGradeTypeId}
        order   by studyGradeTypeId, cardinalTimeUnitNumber, currentAcademicYearId, lower(subjectblockdescription)
    </select>

    <!-- load as little as possible for curriculum transition -->
    <select id="findSubjectBlocksForTransition" parameterType="map" resultType="SubjectBlockCT">
        select
          subjectblock.id as originalId
        , subjectblock.primaryStudyId as originalPrimaryStudyId
        , study.id as studyId
        , exists (
            select subjectblock2.id from opuscollege.subjectblock subjectblock2 
            where subjectblock2.subjectBlockCode = subjectblock.subjectBlockCode
            and subjectblock2.currentAcademicYearId = #{toAcademicYearId}
            ) AS targetExists
        from  opuscollege.subjectblock
        INNER JOIN opuscollege.study on subjectblock.primarystudyid = study.id
        INNER JOIN opuscollege.organizationalunit on study.organizationalUnitId = organizationalunit.id
        INNER JOIN opuscollege.branch on branch.id = organizationalunit.branchId
        INNER JOIN opuscollege.institution on institution.id = branch.institutionId
        WHERE subjectblock.currentAcademicYearid = #{fromAcademicYearId}
        <if test='institutionId != null and institutionId != "0"'>
            and institution.id = #{institutionId}
        </if>
        <if test='branchId != null and branchId != "0"'>
            and branch.id = #{branchId}
        </if>
        <if test='organizationalUnitId != null and organizationalUnitId != "0"'>
            and organizationalunit.id in (select id from opuscollege.crawl_tree(#{organizationalUnitId}, 0)) 
        </if>
        <if test='studyId != null and studyId != "0"'>
            and study.id = #{studyId} 
        </if>
        <if test='searchValue != null and searchValue != ""'>
            and opuscollege.remove_diacritics(lower(study.studyDescription)) like opuscollege.remove_diacritics(lower('%' || #{searchValue} || '%'))
        </if>
        order by study.id
        
     </select>

    <insert id="transferSubjectBlock" parameterType="map">
        insert into opuscollege.subjectBlock ( 
        primaryStudyId
        , subjectBlockCode 
        , subjectBlockDescription
        , active
        , targetGroupCode
        , brsApplyingToSubjectBlock
        , brsPassingSubjectBlock
        , registrationDate
        , blockTypeCode
        , brsMaxContactHours
        , studyTimeCode
        , currentAcademicYearId
        , freeChoiceOption 
        ) select 
          primaryStudyId
        , subjectBlockCode
        , subjectBlockDescription
        , active
        , targetGroupCode
        , brsApplyingToSubjectBlock
        , brsPassingSubjectBlock
        , registrationDate
        , blockTypeCode
        , brsMaxContactHours
        , studyTimeCode
        , #{toAcademicYearId}
        , freeChoiceOption 
        from opuscollege.subjectBlock
        where id = #{subjectBlockCT.originalId}
        <selectKey keyProperty="subjectBlockCT.newId" resultType="int">
            SELECT currVal('opuscollege.subjectBlockSeq')
        </selectKey>
    </insert> 

    <insert id="transferSubjectBlockStudyGradeTypes" parameterType="map">
        insert into opuscollege.subjectblockstudygradetype
            ( subjectblockid
            , studygradetypeid 
            , cardinaltimeunitnumber
            , rigiditytypecode
            , importancetypecode
            , active
            ) select 
              targetsubjectblock.id
            , targetstudygradetype.id
            , sourceSBSGT.cardinaltimeunitnumber
            , sourceSBSGT.rigiditytypecode
            , sourceSBSGT.importancetypecode
            , sourceSBSGT.active
            from opuscollege.subjectblockstudygradetype sourceSBSGT
            inner join opuscollege.subjectblock sourceSubjectBlock
                on  sourceSBSGT.subjectblockid = sourceSubjectBlock.id
                and sourceSubjectBlock.currentAcademicYearId = #{sourceAcademicYearId}
            inner join opuscollege.subjectblock targetSubjectBlock
                on  targetSubjectBlock.subjectBlockCode = sourceSubjectBlock.subjectBlockCode
                and targetSubjectBlock.currentAcademicYearId = #{targetAcademicYearId}
            inner join opuscollege.studygradetype sourcestudygradetype
                on  sourceSBSGT.studygradetypeid = sourcestudygradetype.id
                and sourcestudygradetype.currentAcademicYearId = #{sourceAcademicYearId}
            inner join opuscollege.studygradetype targetstudygradetype
                on  targetstudygradetype.studyId = sourcestudygradetype.studyId
                and targetstudygradetype.gradeTypeCode = sourcestudygradetype.gradeTypeCode
                and targetstudygradetype.studyTimeCode = sourcestudygradetype.studyTimeCode
                and targetstudygradetype.studyFormCode = sourcestudygradetype.studyFormCode
                and targetstudygradetype.currentAcademicYearId = #{targetAcademicYearId}
    
            where not exists
            ( select * from opuscollege.subjectblockstudygradetype targetSBSGT
              where targetSBSGT.studygradetypeid = targetstudygradetype.id
              and targetSBSGT.subjectblockid = targetsubjectblock.id
            )
            order by sourceSBSGT.id
    </insert>

    <!-- TODO order by sourcesubjectblockprerequisite.id once the table has an id column
         (id is better than writewhen because writewhen could be identical for previously transferred records.
    -->
    <insert id="transferSubjectBlockPrerequisites" parameterType="map">
        insert into opuscollege.subjectblockprerequisite
            ( requiredSubjectBlockCode
            , subjectblockstudygradetypeid 
            , active
            ) select
              targetsubjectblock.subjectBlockCode
            , targetsubjectblockstudygradetype.id
            , sourcesubjectblockprerequisite.active
            from opuscollege.subjectblockprerequisite sourcesubjectblockprerequisite
            inner join opuscollege.subjectblock sourcesubjectblock
                on  sourcesubjectblockprerequisite.requiredSubjectBlockCode = sourcesubjectblock.subjectBlockCode
                and sourcesubjectblock.currentAcademicYearId = #{sourceAcademicYearId}
            inner join opuscollege.subjectblock targetsubjectblock
                on  targetsubjectblock.subjectblockcode = sourcesubjectblock.subjectblockcode
                and targetsubjectblock.currentAcademicYearId = #{targetAcademicYearId}
            inner join opuscollege.subjectblockstudygradetype sourcesubjectblockstudygradetype
                on  sourcesubjectblockprerequisite.subjectblockstudygradetypeid = sourcesubjectblockstudygradetype.id
                inner join opuscollege.studygradetype sourcestudygradetype
                    on  sourcesubjectblockstudygradetype.studygradetypeid = sourcestudygradetype.id
            and sourcestudygradetype.currentAcademicYearId = #{sourceAcademicYearId}
            inner join opuscollege.subjectblock sourceinnersubjectblock
                on  sourcesubjectblockstudygradetype.subjectblockid = sourceinnersubjectblock.id
                and sourceinnersubjectblock.currentAcademicYearId = #{sourceAcademicYearId}

            inner join opuscollege.studygradetype targetstudygradetype
                on  targetstudygradetype.studyId = sourcestudygradetype.studyId
                and targetstudygradetype.gradeTypeCode = sourcestudygradetype.gradeTypeCode
                and targetstudygradetype.studyTimeCode = sourcestudygradetype.studyTimeCode
                and targetstudygradetype.studyFormCode = sourcestudygradetype.studyFormCode
                and targetstudygradetype.currentAcademicYearId = #{targetAcademicYearId}
            inner join opuscollege.subjectblock targetinnersubjectblock
                on  targetinnersubjectblock.subjectblockcode = sourceinnersubjectblock.subjectblockcode
                and targetinnersubjectblock.currentAcademicYearId = #{targetAcademicYearId}
            inner join opuscollege.subjectblockstudygradetype targetsubjectblockstudygradetype
                on  targetsubjectblockstudygradetype.studygradetypeid = targetstudygradetype.id
                and targetsubjectblockstudygradetype.subjectblockid = targetinnersubjectblock.id

            where not exists
            ( select * from opuscollege.subjectblockprerequisite targetsubjectblockprerequisite
              where targetsubjectblockprerequisite.subjectblockstudygradetypeid = targetsubjectblockstudygradetype.id
              and targetsubjectblockprerequisite.requiredSubjectBlockCode = targetsubjectblock.subjectBlockCode
            )
            order by sourcesubjectblockprerequisite.writewhen
        </insert>

    <insert id="transferSubjectSubjectBlocks" parameterType="map">
        insert into opuscollege.subjectsubjectblock
                ( subjectId
                , subjectBlockId
                , active
                ) select
                  targetSubject.id
                , targetSubjectBlock.id
                , sourcesubjectsubjectblock.active
                from opuscollege.subjectsubjectblock sourceSubjectsubjectblock
                inner join opuscollege.subjectblock sourceSubjectBlock
                    on  sourcesubjectsubjectblock.subjectblockid = sourceSubjectBlock.id
                    and sourceSubjectBlock.currentAcademicYearId = #{sourceAcademicYearId}
                inner join opuscollege.subjectblock targetSubjectBlock
                    on  targetSubjectBlock.subjectBlockCode = sourceSubjectBlock.subjectBlockCode
                    and targetSubjectBlock.currentAcademicYearId = #{targetAcademicYearId}
                inner join opuscollege.subject sourceSubject
                    on  sourcesubjectsubjectblock.subjectid = sourceSubject.id
                    and sourceSubject.currentAcademicYearId = #{sourceAcademicYearId}
                inner join opuscollege.subject targetSubject
                    on  targetSubject.primaryStudyId = sourceSubject.primaryStudyId
                    and targetSubject.subjectCode = sourceSubject.subjectCode
                    and targetSubject.subjectDescription = sourceSubject.subjectDescription
                    and targetSubject.currentAcademicYearId = #{targetAcademicYearId}
        
                where not exists
                ( select * from opuscollege.subjectsubjectblock targetsubjectsubjectblock
                  where targetsubjectsubjectblock.subjectId = targetsubject.id
                  and targetsubjectsubjectblock.subjectblockid = targetSubjectBlock.id
                )
                order by sourceSubjectsubjectblock.id
    </insert>

    <insert id="addSubjectBlockStudyGradeType" parameterType="SubjectBlockStudyGradeType">
        insert  into opuscollege.subjectBlockStudyGradeType
        ( subjectBlockId
        , studyGradeTypeId
        , active
        , cardinalTimeUnitNumber
        , rigidityTypeCode
        , importanceTypeCode
        ) values
        ( #{subjectBlock.id}
        , #{studyGradeType.id}
        , #{active}
        , #{cardinalTimeUnitNumber}
        , #{rigidityTypeCode}
        , #{importanceTypeCode}
        )
        <selectKey keyProperty="id" resultType="int">
            SELECT currVal('opuscollege.subjectBlockStudyGradeTypeSeq')
        </selectKey>
    </insert>

    <update id="updateSubjectBlockStudyGradeType" parameterType="SubjectBlockStudyGradeType">
        update  opuscollege.subjectBlockStudyGradeType
        set     studyGradeTypeId        = #{studyGradeType.id}
        ,       active                  = #{active}
        ,       cardinalTimeUnitNumber  = #{cardinalTimeUnitNumber}
        ,       rigidityTypeCode        = #{rigidityTypeCode}
        ,       importanceTypeCode      = #{importanceTypeCode} 
        where   id = #{id}
    </update>
    
    <update id="deleteSubjectBlockStudyGradeType" parameterType="int">
        delete  from opuscollege.subjectBlockStudyGradeType
        where   id = #{id}
    </update>

    <!-- find all subjectblocks for one studyGradeType -->
    <select id="findAllSubjectBlockStudyGradeTypes" parameterType="int" resultMap="SubjectBlockStudyGradeTypeResultMap"> 
        <include refid="selectSubjectBlockStudyGradeType_fragment"/>
        where   subjectBlockStudyGradeType.studyGradeTypeId  = #{value}
    </select>

    <!-- find all subjectblocks for one studyGradeType -->
    <select id="findAllSubjectBlockStudyGradeTypesForSubjectBlock" parameterType="int" resultMap="SubjectBlockStudyGradeTypeResultMap">
        <include refid="selectSubjectBlockStudyGradeType_fragment"/>
        where   subjectBlockStudyGradeType.subjectBlockId  = #{value}
    </select>

    <!-- 
        find studyGradeTypes of a study, organizational unit, branch or
        institution, depending on the value of the given parameters
    -->        
    <parameterMap id="findGradeTypesForSubjectBlockStudiesParam" type="map">
        <parameter property="studyId"/>
        <parameter property="preferredLanguage"/>
        <parameter property="studyGradeTypeId"/>
        <parameter property="subjectBlockId"/>
    </parameterMap>

    <!-- TODO: move to subject.xml -->
    <select id="findGradeTypesForSubjectBlockStudies" parameterMap="findGradeTypesForSubjectBlockStudiesParam" resultType="StudyGradeType">
        select  gradetype.code  as gradeTypeCode
        ,       gradetype.description as gradeTypeDescription
        ,       studyGradeType.id
        ,       studyGradeType.studyTimeCode
        ,       studyGradeType.studyFormCode
        ,       studyGradeType.currentAcademicYearId
        ,       studyGradeType.cardinalTimeUnitCode
        ,       studyGradeType.numberOfCardinalTimeUnits
        ,       studyGradeType.maxNumberOfCardinalTimeUnits
        ,       studyGradeType.numberOfSubjectsPerCardinalTimeUnit
        ,       studyGradeType.maxNumberOfSubjectsPerCardinalTimeUnit
        ,       studyGradeType.BRsPassingSubject
        ,       studyGradeType.active
        ,       study.id
        ,       study.studyDescription
        from opuscollege.gradetype
        INNER JOIN opuscollege.studygradetype on opuscollege.gradetype.code = opuscollege.studygradetype.gradetypecode
        INNER JOIN opuscollege.study on opuscollege.studygradetype.studyId = study.id
        inner join opuscollege.subjectBlockStudyGradeType on studygradetype.id = subjectBlockStudyGradeType.studygradetypeId
        WHERE gradetype.lang = #{preferredLanguage}
        <if test='studyId != null and studyId != "0"'>
            and   (study.id = #{studyId}
            <if test="importanceTypeMajor != null">
                 and subjectBlockStudyGradeType.importanceTypeCode = #{importanceTypeMajor}
            </if>
            <if test='minor1Id != null and minor1Id != "0"'>
                OR (study.id =  #{minor1Id}
                and subjectBlockStudyGradeType.importanceTypeCode = #{importanceTypeMinor})
            </if>
            )
        </if>
        <if test='currentAcademicYearId != null and currentAcademicYearId != "0"'>
            and   studyGradeType.currentAcademicYearId = #{currentAcademicYearId}        
        </if>
        and   subjectBlockStudyGradeType.subjectBlockId = #{subjectBlockId}
        ORDER BY lower(gradetype.description)
    </select>   

    <select id="findSubjectBlockStudyGradeTypeByParams" parameterType="map" resultMap="SubjectBlockStudyGradeTypeResultMap">
        <include refid="selectSubjectBlockStudyGradeType_fragment"/>
        WHERE studyGradeTypeId = #{studyGradeTypeId}
        <if test='subjectBlockId != null and subjectBlockId != "0"'>
            AND subjectBlockId = #{subjectBlockId}
        </if>
        <if test='subjectBlockCode != null and subjectBlockCode != ""'>
            AND subjectBlock.subjectBlockCode = #{subjectBlockCode}
        </if>
        <if test='cardinalTimeUnitNumber != null and cardinalTimeUnitNumber != ""'>
            AND (cardinalTimeUnitNumber= #{cardinalTimeUnitNumber} OR cardinalTimeUnitNumber = 0)
        </if>
        <if test='rigidityTypeCode != null and rigidityTypeCode != ""'>
            AND rigidityTypeCode= #{rigidityTypeCode}
        </if>
        <if test='importanceTypeCode != null and importanceTypeCode != ""'>
            AND importanceTypeCode= #{importanceTypeCode}
        </if>
    </select>  

    <select id="findSubjectBlockStudyGradeTypeIdBySubjectBlockAndStudyGradeType" parameterType="map" resultType="int">
        select  id
        from    opusCollege.subjectBlockStudyGradeType
        where   studyGradeTypeId = #{studyGradeTypeId}
        and     subjectBlockId = #{subjectBlockId}
    </select>  

    <select id="findSubjectSubjectBlockByParams" parameterType="map" resultType="SubjectSubjectBlock">
        select  id
        ,       subjectid as "subject.id"
        ,       subjectblockid
        ,       active  
        from opuscollege.subjectsubjectblock
        WHERE subjectId = #{subjectId}
        AND subjectBlockId = #{subjectBlockId}
     </select>
     
     <select id="findSubjectBlockPrerequisites" parameterType="int" resultType="SubjectBlockPrerequisite">
        select  distinct subjectBlockStudyGradeTypeId
        ,       requiredSubjectBlockCode
        ,       subjectBlockDescription  as requiredSubjectBlockDescription
        ,       subjectBlockPrerequisite.active
        from    opusCollege.subjectBlockPrerequisite
        inner   join opusCollege.subjectBlock on subjectBlock.subjectBlockCode = subjectBlockPrerequisite.requiredSubjectBlockCode
        and     subjectBlockStudyGradeTypeId = #{value}
        order   by requiredSubjectBlockDescription
    </select>
    
    <insert id="addSubjectBlockPrerequisite" parameterType="SubjectBlockPrerequisite">
        insert into opusCollege.subjectBlockPrerequisite
        ( subjectBlockStudyGradeTypeId
        , requiredSubjectBlockCode
        , active
        ) values
        ( #{subjectBlockStudyGradeTypeId}
        , #{requiredSubjectBlockCode}
        , #{active}
        )
    </insert>
    
    <delete id="deleteSubjectBlockPrerequisite" parameterType="SubjectBlockPrerequisite">
        delete  from opusCollege.subjectBlockPrerequisite
        where   subjectBlockStudyGradeTypeId = #{subjectBlockStudyGradeTypeId}
        and     requiredSubjectBlockCode = #{requiredSubjectBlockCode}
    </delete>
    
     <delete id="deleteSubjectBlockPrerequisites" parameterType="int">
        delete  from opusCollege.subjectBlockPrerequisite
        where   subjectBlockStudyGradeTypeId = #{subjectBlockStudyGradeTypeId}
    </delete>

    <select id="findSubjectBlockPrimaryStudyId" parameterType="int" resultType="int">
        select  primaryStudyId
        from    opuscollege.subjectBlock
        where   id = #{subjectBlockId}
    </select>

    <select id="findPrerequisiteSubjectBlockCodes" parameterType="int" resultType="int">
        select  requiredSubjectBlockCode
        from    opusCollege.subjectBlockPrerequisite
        where   subjectBlockStudyGradeTypeId = #{value}
    </select>
    
</mapper>