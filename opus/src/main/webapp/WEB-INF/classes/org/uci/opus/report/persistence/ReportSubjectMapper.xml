<?xml version="1.0" encoding="UTF-8"?><!--
  ***** BEGIN LICENSE BLOCK *****
  Version: MPL 1.1/GPL 2.0/LGPL 2.1
  
  The contents of this file are subject to the Mozilla Public License Version 
  1.1 (the "License"); you may not use this file except in compliance with 
  the License. You may obtain a copy of the License at 
  http://www.mozilla.org/MPL/
  
  Software distributed under the License is distributed on an "AS IS" basis,
  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
  for the specific language governing rights and limitations under the
  License.
  
  The Original Code is Opus-College report module code.
  
  The Initial Developer of the Original Code is
  Center for Information Services, Radboud University Nijmegen
  and Universidade Catolica de Mocambique.
  Portions created by the Initial Developer are Copyright (C) 2008
  the Initial Developer. All Rights Reserved.
  
  Contributor(s):
    For Java files, see Javadoc @author tags.
  
  Alternatively, the contents of this file may be used under the terms of
  either the GNU General Public License Version 2 or later (the "GPL"), or
  the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
  in which case the provisions of the GPL or the LGPL are applicable instead
  of those above. If you wish to allow use of your version of this file only
  under the terms of either the GPL or the LGPL, and not to allow others to
  use your version of this file under the terms of the MPL, indicate your
  decision by deleting the provisions above and replace them with the notice
  and other provisions required by the GPL or the LGPL. If you do not delete
  the provisions above, a recipient may use your version of this file under
  the terms of any one of the MPL, the GPL or the LGPL.
  
  ***** END LICENSE BLOCK *****
--><!--Converted at: Fri Jan 29 15:51:38 CET 2016-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.uci.opus.report.persistence.ReportSubjectMapper">

     
<select id="findExaminationAsMap" parameterType="map" resultType="java.util.HashMap">
    SELECT examination.id AS "examinationId"
     , examinationCode AS "examinationCode"
     , examinationDescription AS "examinationDescription"
     , examination.subjectid AS "subjectId"
     , subject.subjectCode as "subjectCode"
     , subject.subjectDescription AS "subjectDescription"   
     , academicyear.description AS "academicYearDescription"

    FROM opuscollege.examination
    INNER JOIN opuscollege.Subject ON Examination.subjectId = Subject.id
    INNER JOIN opuscollege.AcademicYear ON Subject.currentAcademicYearId =  AcademicYear.id

    WHERE true    
    <if test='examinationId != null and institutionId != "0"'>
            AND Examination.id = #{examinationId}
    </if>   
    <if test='subjectId != null and subjectId != "0"'>
            AND Examination.subjectId = #{subjectId}
    </if>      
    <if test='academicYearId != null and academicYearId != "0"'>
            AND Subject.currentAcademicYearId = #{academicYearId}
    </if>
    <if test='studyId != null and studyId != "0"'>
            AND Subject.primaryStudyId = #{studyId}
    </if>
    <if test="subjectOrExaminationStaffMemberId != null">
        AND (
            exists (
                SELECT id FROM opuscollege.subjectTeacher
                WHERE subjectTeacher.staffmemberId = #{subjectOrExaminationStaffMemberId}
                AND subjectTeacher.subjectId = examination.subjectId
            )
            OR exists (
                SELECT id FROM opuscollege.examinationTeacher
                WHERE examinationTeacher.staffmemberId = #{subjectOrExaminationStaffMemberId}
                AND examinationTeacher.examinationId = examination.id
            )
        )
    </if>
    <if test='searchValue != null and searchValue != ""'>
            and opuscollege.remove_diacritics(
                lower(examinationCode) || ' ' || lower(examinationDescription)
                || ' ' || lower(subject.subjectCode) || ' ' || lower(subject.subjectDescription)
            ) like opuscollege.remove_diacritics(lower('%' || #{searchValue} || '%'))
    </if>
</select>

<select id="findStudyPlanSubjectsAsMap" parameterType="map" resultType="java.util.HashMap">
    SELECT DISTINCT   
         subject.id AS id
        ,subject.active AS active
        ,subject.subjectcode 
        ,subject.subjectdescription
        ,study.id AS studyId
        ,study.studydescription
        ,academicyear.description AS academicYear
    
    FROM
      
    opuscollege.studyplan studyplan INNER JOIN opuscollege.studyplandetail studyplandetail ON studyplan.id = studyplandetail.studyplanid
     INNER JOIN opuscollege.studyGradeType ON studyPlanDetail.studyGradeTypeId = studyGradeType.id     
     INNER JOIN opuscollege.studyPlanCardinalTimeUnit ON studyplandetail.studyplancardinaltimeunitid = studyplancardinaltimeunit.id
     INNER JOIN opuscollege.study study ON studygradetype.studyid = study.id     
     INNER JOIN opuscollege.organizationalunit organizationalunit ON study.organizationalunitid = organizationalunit.id
     INNER JOIN opuscollege.branch ON branch.id = organizationalunit.branchId
     INNER JOIN opuscollege.institution institution ON institution.id = branch.institutionid

     LEFT OUTER JOIN opuscollege.subjectblock subjectblock ON studyplandetail.subjectblockid = subjectblock.id
     LEFT OUTER JOIN opuscollege.subjectsubjectblock subjectsubjectblock ON subjectblock.id = subjectsubjectblock.subjectblockid
     INNER JOIN opuscollege.subject subject ON subjectsubjectblock.subjectid = subject.id
         OR subject.id = studyplandetail.subjectid
     INNER JOIN opuscollege.academicyear ON  subject.currentacademicyearid = academicyear.id
     WHERE true
        <if test='searchValue != null and searchValue != ""'>
            AND (
            opuscollege.remove_diacritics(lower(subject."subjectdescription")) like opuscollege.remove_diacritics(lower('%' || #{searchValue} || '%'))
            OR opuscollege.remove_diacritics(lower(study."studydescription")) like opuscollege.remove_diacritics(lower('%' || #{searchValue} || '%'))
            )
        </if>
        <if test='institutionId != null'>
            AND institution.id = #{institutionId}
        </if>
        <if test='branchId != null'>
            AND branch.id = #{branchId}
        </if>
        <if test='organizationalUnitId != null'>
            AND organizationalunit.id in (SELECT id FROM opuscollege.crawl_tree(#{organizationalUnitId}, 0))
        </if>
        <if test='studyId != null'>
            AND study.id = #{studyId}
        </if>
        <if test='academicYearId != null'>
            AND academicyear.id = #{academicYearId} 
        </if>
        <if test='studyGradeTypeId != null'>
            AND studygradetype.id = #{studyGradeTypeId}
        </if>
        <if test='subjectBlockId != null'>
            AND subjectBlock.id = #{subjectBlockId}
        </if>

     ORDER BY subject.subjectdescription
    </select>

</mapper>
