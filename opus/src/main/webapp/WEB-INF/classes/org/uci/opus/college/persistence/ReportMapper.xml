<?xml version="1.0" encoding="UTF-8"?><!--
  ***** BEGIN LICENSE BLOCK *****
  Version: MPL 1.1/GPL 2.0/LGPL 2.1
  
  The contents of this file are subject to the Mozilla Public License Version 
  1.1 (the "License"); you may not use this file except in compliance with 
  the License. You may obtain a copy of the License at 
  http://www.mozilla.org/MPL/
  
  Software distributed under the License is distributed on an "AS IS" basis,
  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
  for the specific language governing rights and limitations under the
  License.
  
  The Original Code is Opus-College college module code.
  
  The Initial Developer of the Original Code is
  Center for Information Services, Radboud University Nijmegen..
  Portions created by the Initial Developer are Copyright (C) 2008
  the Initial Developer. All Rights Reserved.
  
  Contributor(s):
    For Java files, see Javadoc @author tags.
  
  Alternatively, the contents of this file may be used under the terms of
  either the GNU General Public License Version 2 or later (the "GPL"), or
  the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
  in which case the provisions of the GPL or the LGPL are applicable instead
  of those above. If you wish to allow use of your version of this file only
  under the terms of either the GPL or the LGPL, and not to allow others to
  use your version of this file under the terms of the MPL, indicate your
  decision by deleting the provisions above and replace them with the notice
  and other provisions required by the GPL or the LGPL. If you do not delete
  the provisions above, a recipient may use your version of this file under
  the terms of any one of the MPL, the GPL or the LGPL.
  
  ***** END LICENSE BLOCK *****
--><!--Converted at: Fri Oct 30 23:17:55 CET 2015-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.uci.opus.college.persistence.ReportMapper">

    <sql id="common_filters">
        <if test='institutionId != null'>
          AND institution.id = #{institutionId}
        </if>
        <if test='branchId != null'>
          AND branch.id = #{branchId}
        </if>
        <if test='organizationalUnitId != null'>
          AND organizationalunit.id in (SELECT id FROM opuscollege.crawl_tree(#{organizationalUnitId}, 0))
        </if>
        <if test='studyId != null'>
            AND study.id = #{studyId}
        </if>
        <if test='gradeTypeCode != null and gradeTypeCode != ""'>
            AND gradeType.code = #{gradeTypeCode}
        </if>
        <if test='academicYearId != null'>
          AND academicyear.id = #{academicYearId} 
        </if>
        <if test='studyGradeTypeId != null'>
          AND studygradetype.id = #{studyGradeTypeId}
        </if>
        <if test='subjectBlockId != null'>
          AND subjectblock.id = #{subjectBlockId}
        </if>
        <if test='studentId != null'>
          AND student.studentId = #{studentId}
        </if>
        <if test='studyPlanId != null'>
          AND studyPlan.id = #{studyPlanId}
        </if>
        <if test='personId != null'>
          AND person.id = #{personId}
        </if>
        <if test='registrationYear != null'>
          AND EXTRACT(YEAR FROM student.dateofenrolment) = #{registrationYear}
        </if>
    </sql>

    <sql id="findStudents_fragment">
    FROM opuscollege.person person 
     INNER JOIN opuscollege.student student ON person.id = student.personid
     LEFT OUTER JOIN opuscollege.gender ON gender.code = person.gendercode and gender.lang = 'en'
     INNER JOIN opuscollege.studyplan studyplan ON student.studentid = studyplan.studentid
     INNER JOIN opuscollege.studyPlanCardinalTimeUnit ON studyplan.id = studyplancardinaltimeunit.studyPlanId
     INNER JOIN opuscollege.studyGradeType on studyPlanCardinalTimeUnit.studyGradeTypeId = studyGradeType.id
     INNER JOIN opuscollege.academicyear ON academicyear.id = studygradetype.currentacademicyearid
     INNER JOIN opuscollege.gradetype ON studyplan.gradetypecode = gradetype.code AND gradetype.lang = 'en'
     INNER JOIN opuscollege.study study ON studygradetype.studyid = study.id
     INNER JOIN opuscollege.organizationalunit ON study.organizationalunitid = organizationalunit.id
     INNER JOIN opuscollege.branch branch ON organizationalunit.branchid = branch.id
     INNER JOIN opuscollege.institution institution ON branch.institutionid = institution.id
     WHERE true
        <if test='searchValue != null and searchValue != ""'>
            AND (
                opuscollege.remove_diacritics(lower(studentcode))
                || ' ' || opuscollege.remove_diacritics(lower(person.firstnamesfull))
                || ' ' || opuscollege.remove_diacritics(lower(person.surnamefull))
                like opuscollege.remove_diacritics(lower('%' || #{searchValue} || '%'))
            )
        </if>
        <if test='institutionId != null'>
          AND institution.id = #{institutionId}
        </if>
        <if test='branchId != null'>
          AND branch.id = #{branchId}
        </if>
        <if test='organizationalUnitId != null'>
          AND organizationalunit.id in (SELECT id FROM opuscollege.crawl_tree(#{organizationalUnitId}, 0))
        </if>
        <if test='organizationalUnitIds != null and organizationalUnitIds.size() > 0'>
            and organizationalunit.id in 
            <foreach collection="organizationalUnitIds" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
        <if test='studyId != null'>
          AND study.id = #{studyId}
        </if>
        <if test='academicYearId != null'>
          AND academicyear.id = #{academicYearId} 
        </if>
        <if test='studyGradeTypeId != null'>
          AND studygradetype.id = #{studyGradeTypeId}
        </if>
        <if test='genderCode != null and genderCode != ""'>
          AND person.genderCode = #{genderCode}
        </if>
        <if test="cardinalTimeUnitNumber != null">
            AND opuscollege.studyPlanCardinalTimeUnit.cardinalTimeUnitNumber = #{cardinalTimeUnitNumber} 
        </if>
        <if test='studyPlanStatusCode != null and studyPlanStatusCode != ""'>
            AND studyPlan.studyPlanStatusCode = #{studyPlanStatusCode}
        </if>
	</sql>

    <select id="findStudentCount" parameterType="map" resultType="int">
        SELECT COUNT(DISTINCT student.studentid) AS total
        <include refid="findStudents_fragment"/>
    </select>

    <!-- Note: The inner select with the string_agg() is to find all the study programs that a student is following,
               including those study programs that are outside of the filter criteria such as academicyear etc.
                -->
    <select id="findStudents" parameterType="map" resultType="java.util.HashMap"> 
    SELECT 
        person.firstNamesFull AS firstNamesFull,
        person.surnameFull AS surnameFull,
        person.birthdate,
        person.active,
        student.studentId AS studentId,
        student.personId AS personId,
        student.primarystudyId,
        student.studentcode,
        upper(substr(gender.description,0,2)) AS genderDescription
		, (select string_agg(distinct study2.studydescription, '; ')
		    from opuscollege.study study2
		    inner join opuscollege.studyGradeType studyGradeType2 on studyGradeType2.studyid = study2.id
		    inner join opuscollege.studyPlanCardinalTimeUnit studyPlanCardinalTimeUnit2 ON studyPlanCardinalTimeUnit2.studyGradeTypeId = studyGradeType2.id
		    inner join opuscollege.studyplan studyplan2 on studyPlanCardinalTimeUnit2.studyplanid = studyplan2.id
		    where studyplan2.studentid = student.studentid
		) as studydescription

	<include refid="findStudents_fragment"/>

		GROUP BY firstNamesFull
			, surnameFull
			, birthdate
			, person.active
			, student.studentid
			, genderDescription

        ORDER BY person.firstnamesfull, person.surnamefull
    </select>

    <select id="findStudyplanCardinalTimeUnits" parameterType="map" resultType="java.util.HashMap"> 
     SELECT DISTINCT
         
         person.firstNamesFull AS firstNamesFull,
         person.surnameFull AS surnameFull,
         person.birthdate,
         person.active,
         student.studentId AS studentId,
         student.personId AS personId,
         student.primarystudyId,
         student.studentcode,
         studyPlan.id AS studyPlanId,
         study.studydescription AS studyDescription,
         gradetype.description AS gradetypedescription,
         upper(substr(gender.description,0,2)) AS genderDescription,
         studyplan.studyplandescription,
         studyPlanCardinalTimeUnit.id AS "studyPlanCardinalTimeUnitId",
         cardinaltimeunit.description AS cardinaltimeunitdescription,
         studyPlanCardinalTimeUnit.cardinaltimeunitnumber

    FROM
     opuscollege.person person 
     INNER JOIN opuscollege.student student ON person.id = student.personid
     LEFT OUTER JOIN opuscollege.gender ON gender.code = person.gendercode and gender.lang = #{lang}
     LEFT OUTER JOIN opuscollege.studyplan studyplan ON student.studentid = studyplan.studentid
     LEFT OUTER JOIN opuscollege.studyPlanCardinalTimeUnit ON studyplan.id = studyplancardinaltimeunit.studyPlanId
     LEFT OUTER JOIN opuscollege.studyGradeType on studyPlanCardinalTimeUnit.studyGradeTypeId = studyGradeType.id
     LEFT OUTER JOIN opuscollege.gradetype ON studyplan.gradetypecode = gradetype.code AND gradetype.lang = #{lang}
     LEFT OUTER JOIN opuscollege.cardinalTimeUnit ON studyGradeType.cardinaltimeunitcode = cardinaltimeunit.code AND cardinaltimeunit.lang = #{lang}
     LEFT OUTER JOIN opuscollege.academicyear ON academicyear.id = studygradetype.currentacademicyearid
<!--      LEFT OUTER JOIN opuscollege.studyplandetail studyplandetail ON studyplan.id = studyplandetail.studyplanid -->
     LEFT OUTER JOIN opuscollege.study study ON studygradetype.studyid = study.id
         OR study.id = student.primarystudyid
     LEFT OUTER JOIN opuscollege.organizationalunit ON study.organizationalunitid = organizationalunit.id
     LEFT OUTER JOIN opuscollege.branch branch ON organizationalunit.branchid = branch.id
     LEFT OUTER JOIN opuscollege.institution institution ON branch.institutionid = institution.id
     WHERE true
        
        <if test='searchValue != null and searchValue != ""'>
            AND (
                opuscollege.remove_diacritics(lower(studentcode))
                || ' ' || opuscollege.remove_diacritics(lower(person.firstnamesfull))
                || ' ' || opuscollege.remove_diacritics(lower(person.surnamefull))
                like opuscollege.remove_diacritics(lower('%' || #{searchValue} || '%'))
                OR opuscollege.remove_diacritics(lower(study.studydescription)) like opuscollege.remove_diacritics(lower('%' || #{searchValue} || '%'))
            )
        </if>
        <if test='institutionId != null'>
          AND institution.id = #{institutionId}
        </if>
        <if test='branchId != null'>
          AND branch.id = #{branchId}
        </if>
        <if test='organizationalUnitId != null'>
          AND organizationalunit.id in (SELECT id FROM opuscollege.crawl_tree(#{organizationalUnitId}, 0))
        </if>
        <if test='studyId != null'>
          AND study.id = #{studyId}
        </if>
        <if test='academicYearId != null'>
          AND academicyear.id = #{academicYearId} 
        </if>
        <if test='studyGradeTypeId != null'>
          AND studygradetype.id = #{studyGradeTypeId}
        </if>
        <if test='genderCode != null and genderCode != ""'>
          AND person.genderCode = #{genderCode}
        </if>
        <if test='registrationYear != null'>
          AND EXTRACT(YEAR FROM student.dateofenrolment) = #{registrationYear}
        </if>
        <if test="cardinalTimeUnitNumber != null">
           	AND opuscollege.studyPlanCardinalTimeUnit.cardinalTimeUnitNumber = #{cardinalTimeUnitNumber} 
        </if>
        <if test='progressStatusCode != null and progressStatusCode != ""'>
            AND studyPlanCardinalTimeUnit.progressStatusCode = #{progressStatusCode}
        </if>
        <if test='studyPlanStatusCode != null and studyPlanStatusCode != ""'>
            AND studyPlan.studyPlanStatusCode = #{studyPlanStatusCode}
        </if>

        ORDER BY person.firstnamesfull, person.surnamefull, studydescription, gradetypedescription, cardinaltimeunitnumber

    </select>

    <!-- List cardinal time units existing in study plans -->

    <sql id="findCTUStudygradetypes_fragment">
        FROM
            opuscollege.student 
            INNER JOIN opuscollege.person person ON student.personId = person.id
            INNER JOIN opuscollege.studyplan studyplan ON student.studentid = studyplan.studentid
            LEFT OUTER JOIN opuscollege.studyplanstatus ON studyplan.studyplanstatuscode = studyplanstatus.code AND studyplanstatus.lang = #{lang}
            INNER JOIN opuscollege.studyPlanCardinalTimeUnit ON studyplan.id = studyplancardinaltimeunit.studyPlanId
            INNER JOIN opuscollege.studyGradeType on studyPlanCardinalTimeUnit.studyGradeTypeId = studyGradeType.id
            INNER JOIN opuscollege.cardinalTimeUnit ON studyGradeType.cardinaltimeunitcode = cardinaltimeunit.code AND cardinaltimeunit.lang = #{lang}
            INNER JOIN opuscollege.academicyear ON academicyear.id = studygradetype.currentacademicyearid
            INNER JOIN opuscollege.study study ON studygradetype.studyid = study.id
            INNER JOIN opuscollege.gradetype gradetype ON gradetype.code = studygradetype.gradetypecode AND gradetype.lang = #{lang}
            LEFT OUTER JOIN opuscollege.studyForm ON studyForm.code = studygradetype.studyFormCode AND studyForm.lang = #{lang}
            LEFT OUTER JOIN opuscollege.studyTime ON studyTime.code = studygradetype.studyTimeCode AND studyTime.lang = #{lang}
            INNER JOIN opuscollege.organizationalunit ON study.organizationalunitid = organizationalunit.id
            INNER JOIN opuscollege.branch branch ON organizationalunit.branchid = branch.id
            INNER JOIN opuscollege.institution institution ON branch.institutionid = institution.id

        WHERE studyplancardinaltimeunit.cardinaltimeunitnumber != 0

        <include refid="common_filters"/>

        <if test='searchValue != null and searchValue != ""'>
            AND ( 
            opuscollege.remove_diacritics(lower(academicYear.description)) LIKE opuscollege.remove_diacritics(lower('%' || #{searchValue} || '%'))
            OR opuscollege.remove_diacritics(lower(cardinaltimeunit.description) || ' ' || CAST(studyplancardinaltimeunit.cardinaltimeunitnumber AS VARCHAR)) like '%' || #{searchValue} || '%'
            OR opuscollege.remove_diacritics(lower(study.studydescription || ' - ' || gradetype.description)) LIKE opuscollege.remove_diacritics(lower('%' || #{searchValue} || '%'))
            )
        </if>
        <if test='statusCode != null and statusCode != ""'>
            AND studyplan.studyplanstatuscode = #{statusCode}
        </if>
        <if test="cardinalTimeUnitNumber != null">
        	AND opuscollege.studyPlanCardinalTimeUnit.cardinalTimeUnitNumber = #{cardinalTimeUnitNumber} 
       	</if>
        <if test='progressStatusCode != null and progressStatusCode != ""'>
            AND studyPlanCardinalTimeUnit.progressStatusCode = #{progressStatusCode}
       	</if>
        <if test='studyPlanStatusCode != null and studyPlanStatusCode != ""'>
            AND studyPlan.studyPlanStatusCode = #{studyPlanStatusCode}
       	</if>
        <if test='genderCode != null and genderCode != ""'>
      		AND person.genderCode = #{genderCode}
       	</if>
	</sql>

    <select id="findCTUStudygradetypesCount" parameterType="map" resultType="int">
        SELECT COUNT(distinct (studyGradeType.id, cardinaltimeunitnumber)) AS total
        <include refid="findCTUStudygradetypes_fragment"/>
    </select>

    <select id="findCTUStudygradetypes" parameterType="map" resultType="java.util.HashMap"> 
        SELECT
          count(distinct student.studentid) AS count,
          studyGradeType.id AS studygradetypeid,
          studyGradeType.currentacademicyearid,
          cardinaltimeunit.description AS cardinaltimeunitdescription,
          studyplancardinaltimeunit.cardinaltimeunitnumber AS cardinaltimeunitnumber,
          academicyear.description AS academicYear,
          study.studydescription || ' - ' || gradetype.description AS studygradedescription,
          studyForm.description as studyFormDescription,
          studyTime.description as studyTimeDescription

        <include refid="findCTUStudygradetypes_fragment"/>

        GROUP BY
          studyGradeType.id ,
          studygradetype.currentacademicyearid,
          cardinaltimeunitdescription,
          cardinaltimeunitnumber,
          academicYear,
          studygradedescription,
          studyFormDescription,
          studyTimeDescription

        ORDER BY studygradedescription, academicYear DESC, cardinaltimeunitnumber

    </select>

    <!-- CTUs -->
    <!-- called from CurriculumReportDao -->
    <select id="findCTUs" parameterType="map" resultType="java.util.HashMap"> 
       SELECT
          studyGradeType.id AS studygradetypeid,
          studyGradeType.currentacademicyearid,
          cardinaltimeunit.description AS cardinaltimeunitdescription,
          cardinaltimeunitstudygradetype.cardinaltimeunitnumber,
          academicyear.description AS academicYear,
          study.studydescription || ' - ' || gradetype.description AS studygradedescription

        FROM
            opuscollege.cardinaltimeunitstudygradetype
            INNER JOIN opuscollege.studyGradeType on cardinaltimeunitstudygradetype.studyGradeTypeId = studyGradeType.id
            INNER JOIN opuscollege.cardinalTimeUnit ON studyGradeType.cardinaltimeunitcode = cardinaltimeunit.code AND cardinaltimeunit.lang = #{lang}
            INNER JOIN opuscollege.academicyear ON academicyear.id = studygradetype.currentacademicyearid
            INNER JOIN opuscollege.study study ON studygradetype.studyid = study.id
            INNER JOIN opuscollege.gradetype gradetype ON gradetype.code = studygradetype.gradetypecode AND gradetype.lang = #{lang}
            INNER JOIN opuscollege.organizationalunit ON study.organizationalunitid = organizationalunit.id
            INNER JOIN opuscollege.branch branch ON organizationalunit.branchid = branch.id
            INNER JOIN opuscollege.institution institution ON branch.institutionid = institution.id

        WHERE true

        <include refid="common_filters"/>
        <if test='searchValue != null and searchValue != ""'>
                AND ( 
                opuscollege.remove_diacritics(lower(academicYear.description)) LIKE opuscollege.remove_diacritics(lower('%' || #{searchValue} || '%'))
                OR opuscollege.remove_diacritics(lower(cardinaltimeunit.description) || ' ' || CAST(studyplancardinaltimeunit.cardinaltimeunitnumber AS VARCHAR)) like '%' || #{searchValue} || '%'
                OR opuscollege.remove_diacritics(lower(study.studydescription || ' - ' || gradetype.description)) LIKE opuscollege.remove_diacritics(lower('%' || #{searchValue} || '%'))
                )
        </if>
        <if test="cardinalTimeUnitNumber != null">
            AND cardinaltimeunitstudygradetype.cardinalTimeUnitNumber = #{cardinalTimeUnitNumber} 
        </if>
       
       GROUP BY
          studyGradeType.id ,
          studygradetype.currentacademicyearid,
          cardinaltimeunitdescription,
          cardinaltimeunitnumber,
          academicYear,
          studygradedescription
          
       ORDER BY studygradedescription, academicYear DESC, cardinaltimeunitnumber
       
    </select>

    <select id="findStudyPlansByName" parameterType="map" resultType="java.util.HashMap">
    SELECT DISTINCT studyplan.id AS "id"
        , person.surnamefull AS "surnameFull"
        , person.firstnamesfull AS "firstnamesFull"
        , studyplandescription AS "studyPlanDescription"
        , person.id AS "personId"
        , study.studydescription AS "studyDescription"
        , gradetype.description AS "gradeTypeDescription"
        
        FROM        "opuscollege"."person" person
        INNER JOIN  "opuscollege"."student" student ON person."id" = student."personid"
        INNER JOIN  "opuscollege"."studyplan" studyplan ON student."studentid" = studyplan."studentid"
        INNER JOIN  "opuscollege".studyplancardinaltimeunit ON StudyPlan.id = StudyPlanCardinalTimeUnit.studyPlanid
        INNER JOIN  "opuscollege"."study" study ON studyplan."studyid" = study."id"
        INNER JOIN  "opuscollege".studyGradeType ON studyPlanCardinalTimeUnit.studyGradeTypeId = studyGradeType.id
        INNER JOIN  "opuscollege"."gradetype" gradetype ON studyplan."gradetypecode" = gradetype."code" AND gradetype.lang = #{lang}
        INNER JOIN  "opuscollege"."organizationalunit" organizationalunit ON study."organizationalunitid" = organizationalunit."id"
        INNER JOIN  "opuscollege"."branch" branch ON organizationalunit."branchid" = branch."id"
        INNER JOIN  "opuscollege"."institution" institution ON branch."institutionid" = institution."id"
               
        WHERE studyplan.active = 'Y' AND institution.institutionTypeCode = #{institutionTypeCode}
        
        <if test='searchValue != null and searchValue != ""'>
            AND (
            opuscollege.remove_diacritics(lower(studentcode))
            || ' ' || opuscollege.remove_diacritics(lower(person.firstnamesfull))
            || ' ' || opuscollege.remove_diacritics(lower(person.surnamefull))
            like opuscollege.remove_diacritics(lower('%' || #{searchValue} || '%'))
            )
        </if>
        <if test='institutionId != null'>
          AND institution.id = #{institutionId}
        </if>
        <if test='branchId != null'>
          AND branch.id = #{branchId}
        </if>
        <if test='organizationalUnitId != null'>
          AND organizationalunit.id in (SELECT id FROM opuscollege.crawl_tree(#{organizationalUnitId}, 0))
        </if>
        <if test='studyId != null'>
            AND study.id = #{studyId}
        </if>
        <if test='gradeTypeCode != null and gradeTypeCode != ""'>
            AND gradeType.code = #{gradeTypeCode}
        </if>
        <if test='academicYearId != null'>
          AND studyGradeType.currentAcademicYearId = #{academicYearId} 
        </if>
        <if test='studentId != null'>
          AND student.studentId = #{studentId}
        </if>
        <if test='studyPlanId != null'>
          AND studyPlan.id = #{studyPlanId}
        </if>
        <if test='personId != null'>
          AND person.id = #{personId}
        </if>
        <if test='cardinalTimeUnitNumber != null'>
           	AND opuscollege.studyPlanCardinalTimeUnit.cardinalTimeUnitNumber = #{cardinalTimeUnitNumber} 
        </if>
        <if test='progressStatusCode != null and progressStatusCode != ""'>
            AND studyPlanCardinalTimeUnit.progressStatusCode = #{progressStatusCode}
        </if>
        <if test='studyPlanStatusCode != null and studyPlanStatusCode != ""'>
            AND studyPlan.studyPlanStatusCode = #{studyPlanStatusCode}
        </if>
        <if test='genderCode != null and genderCode != ""'>
            AND person.genderCode = #{genderCode}
         </if>

        ORDER BY person.firstnamesfull, person.surnamefull
        
    </select>

</mapper>